{"version":3,"sources":["components/common/ShowError.jsx","components/SocialSignIn/SocialSignIn.jsx","fBase.js","redux/modules/image.js","redux/modules/comment.js","redux/modules/like.js","redux/modules/post.js","hooks/useRandom.js","redux/modules/users.js","redux/modules/profile.js","redux/modules/auth.js","components/SocialSignIn/SocialSignInContainer.jsx","hooks/useChecks.js","components/AuthForm/AuthForm.jsx","components/AuthForm/AuthFormCotainer.jsx","pages/Auth/Auth.jsx","components/common/Confirm.jsx","components/Comment/Comment.jsx","components/CommentForm/CommentForm.jsx","components/CommentForm/CommentFormContainer.jsx","components/SignOut/SignOut.jsx","components/SignOut/SignOutContainer.jsx","components/common/Menu.jsx","components/common/Navigation.jsx","components/common/Side.jsx","pages/Comments/Comments.jsx","components/common/Modal.jsx","components/PostControl/PostControl.jsx","components/PostControl/PostControlContainer.jsx","components/PostComment/PostComment.jsx","components/Post/Post.jsx","components/common/UseInfiniteScroll.jsx","components/Post/PostContainer.jsx","hooks/useScroll.js","pages/Home/Home.jsx","pages/Posts/Posts.jsx","components/common/ProfilePostImages.jsx","hooks/useWindowSize.js","components/UserProfile/UserProfile.jsx","components/UserProfile/UserProfileContainer.jsx","pages/Profile/Profile.jsx","hooks/resize.js","components/PostForm/PostForm.jsx","components/PostUpdate/PostUpdateContainer.jsx","components/ProfileUpdate/ProfileUpdate.jsx","components/ProfileUpdate/ProfileUpdateContainer.jsx","pages/Update/Update.jsx","components/PostForm/PostFormContainer.jsx","pages/Write/Write.jsx","components/Router.jsx","components/common/Load.jsx","components/Init/Init.jsx","redux/modules/init.js","components/Init/InitContainer.jsx","App.js","reportWebVitals.js","redux/modules/reducer.js","redux/store.js","index.js"],"names":["ShowError","errorSelector","useSelector","state","auth","className","Alert","severity","SocialSignIn","onSocialClick","name","onClick","icon","faGoogle","size","e","faGithub","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","firestore","storageService","storage","initialState","imageUrl","getImageUrl","isGet","loading","getError","deleteImageUrl","isDelete","deleteError","getImageUrlThunk","createAsyncThunk","imageBase64","thunkAPI","a","getState","currentUser","profile","attachmentRef","ref","child","uid","uuidv4","putString","res","getDownloadURL","code","message","rejectWithValue","deleteImageUrlThunk","DEFAULT_USER_IMAGE","refFromURL","delete","image","createSlice","reducers","resetImage","extraReducers","pending","fulfilled","payload","rejected","actions","setCommentThunk","comment","postId","currentUserInfo","users","comments","commentObj","userId","userDisplayName","displayName","userPhotoUrl","commentDate","Date","now","count","collection","doc","set","where","orderBy","limit","get","docs","commentArray","map","data","commentDisplayName","commentId","id","merge","dispatch","getCommentsThunk","getAllPostsThunk","deleteCommentsThunk","promises","forEach","Promise","all","deleteCommentThunk","setComment","isSet","setError","getComments","deleteComments","deleteComment","updateComment","isUpdate","updateError","allLikes","userLikes","getAllLikes","getUserLikes","getMoreLikes","isNone","setLikeOff","setLikeOn","getMoreLikesThunk","postDate","type","userName","query","startAfter","length","likes","likeCount","isLike","likeUsers","includes","getAllLikesThunk","_","getUserLikesThunk","setLikeOnThunk","like","prevDoc","setLikeOffThunk","filter","resetGetMoreLikes","resetUserLikes","getLikes","allPosts","userPosts","prevScrollY","getMorePosts","getAllPosts","getUserPosts","createPost","updatePost","deletePost","updatePostsUserInfo","updatePostsUserInfoThunk","info","posts","post","update","updatePostThunk","inputs","postImageUrl","postText","text","prevImageUrl","Error","deletePostThunk","createPostThunk","uuidV4","getMorePostsThunk","getUserPostsThunk","resetUserPosts","resetGetMorePosts","setPrevScrollY","resetGetUserPosts","updatePostUserInfo","resetPost","setPostFormError","useRandom","range","except","undefined","randomSet","Set","temp","Math","floor","random","add","userIntro","subDisplayName","website","userInfo","randomUserInfo","userMaxCount","getCurrentUserInfo","getUserInfo","getRandomUserInfo","setCurrentUserInfo","checkDisplayName","isCheck","checkError","exist","getUserMaxCount","getUserMaxCountThunk","getRandomUserInfoThunk","checkDisplayNameThunk","getUserInfoThunk","setCurrentUserInfoThunk","getCurrentUserInfoThunk","error","resetUsers","resetUserInfo","updateProfile","isSignIn","updateProfileThunk","resetProfile","setCurrentUser","reducer","prepare","emailSignUp","isSignUp","signUpError","emailSignIn","signInError","socialSignIn","signOut","isSignOut","signOutError","signOutThunk","emailSignUpThunk","email","password","createUserWithEmailAndPassword","emailSignInThunk","selectError","signInWithEmailAndPassword","socialSignInThunk","setPersistence","Auth","Persistence","SESSION","provider","GoogleAuthProvider","GithubAuthProvider","addScope","DEFAULT_USER_DISPLAYNAME","signInWithPopup","user","photoURL","resetAuth","SocialSignInContainer","setNewAccount","useDispatch","useCallback","event","target","useStyles","makeStyles","input","borderColor","props","color","helperText","checkPassword","test","checkEmail","useCheckDisplayName","prevDisplayName","helperTextMessage","AuthForm","onChange","onSubmit","newAccount","TextField","variant","value","label","InputProps","FormHelperTextProps","CircularProgress","Button","disableElevation","disabled","AuthFormContainer","useState","setInputs","useEffect","check","debounceCheck","useMemo","debounce","preventDefault","toggleAccount","Confirm","children","isOn","toggle","hasMounted","setHasMounted","modal","document","querySelector","ReactDOM","createPortal","Comment","currentUserId","confirmIsOn","setConfirmIsOn","confirmToggle","src","alt","to","CommentForm","CommentFormContainer","SignOut","onSignOutClick","setIsOn","SignOutContainer","history","useHistory","push","Menu","location","Navigation","pathname","useLocation","setisOn","refresh","window","scrollTo","style","border","AccountCircleOutlined","LockOutlined","React","memo","Side","randomUsers","i","toString","getFullYear","href","Comments","Modal","rowNum","transform","PostControl","toComments","checked","htmlFor","farHeart","faHeart","faComment","PostControlContainer","findLike","find","initIsLike","setLike","toggleDebounce","PostComment","commentEl","Post","shortText","slice","split","isMore","setMore","width","height","faEllipsisH","UseInfiniteScroll","execute","debounceExecute","lastElRef","useRef","observer","current","disconnect","IntersectionObserver","isIntersecting","threshold","observe","PostContainer","profileInfo","useScroll","useLayoutEffect","scrollY","Home","isGetAllPosts","Posts","postNum","targetRef","useParams","isGetUserPosts","num","top","offsetTop","scrollToPost","ProfilePostImages","toPosts","arr","tmp","splice","devidePosts","row","index","useWindowSize","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","UserProfile","postCount","currentUserDisplayName","websiteMatch","match","rel","UserProfileContainer","getInfoPosts","Profile","resize","img","maxSize","canvas","createElement","max_size","getContext","drawImage","toDataURL","PostForm","postFormError","errorToggle","faCamera","accept","placeholder","wrap","maxLength","PostUpdateContainer","prevText","preventSubmit","files","theFile","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Image","onload","dataUrl","readAsDataURL","replace","ProfileUpdate","checkWebsiteRef","useCheckWebsite","required","minRows","maxRows","multiline","ProfileUpdateContainer","prevIntro","prevSubDisplayName","prevWebsite","subDispalyName","alert","Update","PostFormContainer","Write","AppRouter","isLoggedIn","getInitInfo","path","exact","component","from","Load","faInstagram","Init","isInit","isSignInOut","init","setIsinitTrue","InitContainer","onAuthStateChanged","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","store","configureStore","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf23a392.chunk.js","sourcesContent":["import { Alert } from '@material-ui/lab';\r\nimport { useSelector } from 'react-redux';\r\nimport './ShowError.scss';\r\n\r\n// Auth 전용 Error 표시 Component\r\nconst ShowError = () => {\r\n\t// redux state\r\n\tconst errorSelector = useSelector((state) => state.auth.errorSelector);\r\n\r\n\t// redux state로 불러온 error code를 지정한 message로 변환\r\n\tconst check = () => {\r\n\t\tif (\r\n\t\t\terrorSelector === 'auth/user-not-found' ||\r\n\t\t\terrorSelector === 'auth/wrong-password'\r\n\t\t) {\r\n\t\t\treturn '가입하지 않은 아이디이거나, 잘못된 비밀번호입니다.';\r\n\t\t} else if (errorSelector === 'auth/email-already-in-use') {\r\n\t\t\treturn '이미 가입된 이메일 입니다.';\r\n\t\t} else {\r\n\t\t\treturn errorSelector;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"show_error\">\r\n\t\t\t{errorSelector ? (\r\n\t\t\t\t<Alert severity=\"warning\" className=\"message\">\r\n\t\t\t\t\t{check()}\r\n\t\t\t\t</Alert>\r\n\t\t\t) : (\r\n\t\t\t\t<></>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ShowError;\r\n","import { faGithub, faGoogle } from '@fortawesome/free-brands-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './SocialSignIn.scss';\r\n\r\nconst SocialSignIn = ({ onSocialClick }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"ortext_container\">\r\n\t\t\t\t<div className=\"ortext_slice\"></div>\r\n\t\t\t\t<div className=\"ortext\">또는</div>\r\n\t\t\t\t<div className=\"ortext_slice\"></div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"social_signIn\">\r\n\t\t\t\t<button className=\"auth_btn\" name=\"google\" onClick={onSocialClick}>\r\n\t\t\t\t\t<FontAwesomeIcon className=\"icon\" icon={faGoogle} size=\"1x\" />\r\n\t\t\t\t\tGoogle로 로그인 하기\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"auth_btn\"\r\n\t\t\t\t\tname=\"github\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\tonSocialClick(e);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon className=\"icon\" icon={faGithub} size=\"1x\" />\r\n\t\t\t\t\tGithub로 로그인 하기\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SocialSignIn;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: process.env.REACT_APP_API_KEY,\r\n\tauthDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n\tprojectId: process.env.REACT_APP_PROJECT_ID,\r\n\tstorageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n\tmessagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n\tappId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { storageService } from '../../fBase';\r\nimport { DEFAULT_USER_IMAGE } from './auth';\r\n\r\n// Initial State\r\nconst initialState = {\r\n\timageUrl: '',\r\n\tgetImageUrl: {\r\n\t\tisGet: false,\r\n\t\tloading: false,\r\n\t\tgetError: '',\r\n\t},\r\n\tdeleteImageUrl: {\r\n\t\tloading: false,\r\n\t\tisDelete: false,\r\n\t\tdeleteError: '',\r\n\t},\r\n};\r\n// Async\r\nexport const getImageUrlThunk = createAsyncThunk(\r\n\t'redux-racstagram/images/getImageUrlThunk',\r\n\tasync (imageBase64, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tif (imageBase64) {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tprofile: { currentUser },\r\n\t\t\t\t} = await thunkAPI.getState();\r\n\t\t\t\t// storage 생성\r\n\t\t\t\tconst attachmentRef = storageService\r\n\t\t\t\t\t.ref()\r\n\t\t\t\t\t.child(`${currentUser.uid}/${uuidv4()}`);\r\n\t\t\t\t// firebase storage에 데이터 넣기\r\n\t\t\t\tconst res = await attachmentRef.putString(imageBase64, 'data_url');\r\n\t\t\t\t// url 가져오기\r\n\t\t\t\treturn await res.ref.getDownloadURL();\r\n\t\t\t}\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({\r\n\t\t\t\tcode,\r\n\t\t\t\tmessage,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const deleteImageUrlThunk = createAsyncThunk(\r\n\t'redux-racstagram/images/deleteImageUrlThunk',\r\n\tasync (imageUrl, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tif (imageUrl !== DEFAULT_USER_IMAGE) {\r\n\t\t\t\tstorageService.refFromURL(imageUrl).delete();\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\n// Slice\r\n// updateSelector : profile, post Update를 구분 해주는 역할\r\nconst image = createSlice({\r\n\tname: 'redux-racstagram/images',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tresetImage: () => ({ ...initialState }),\r\n\t},\r\n\textraReducers: {\r\n\t\t[getImageUrlThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tgetImageUrl: { ...state.getImageUrl, loading: true },\r\n\t\t}),\r\n\t\t[getImageUrlThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\timageUrl: payload,\r\n\t\t\tgetImageUrl: {\r\n\t\t\t\t...state.getImageUrl,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisGet: true,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[getImageUrlThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tgetImageUrl: {\r\n\t\t\t\t...state.getImageUrl,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tgetError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[deleteImageUrlThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tdeleteImageUrl: { ...state.deleteImageUrl, loading: true },\r\n\t\t}),\r\n\t\t[deleteImageUrlThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tdeleteImageUrl: {\r\n\t\t\t\t...state.deleteImageUrl,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisDelete: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[deleteImageUrlThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tdeleteImageUrl: {\r\n\t\t\t\t...state.deleteImageUrl,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tdeleteError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t},\r\n});\r\n\r\nexport default image.reducer;\r\n\r\n// actionCreator\r\nexport const { resetImage } = image.actions;\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { dbService } from '../../fBase';\r\nimport { getAllPostsThunk } from './post';\r\n\r\n// Initial State\r\nconst initialState = {\r\n\tcomments: [],\r\n\tsetComment: {\r\n\t\tloading: false,\r\n\t\tisSet: false,\r\n\t\tsetError: '',\r\n\t},\r\n\tgetComments: {\r\n\t\tloading: false,\r\n\t\tisGet: false,\r\n\t\tgetError: '',\r\n\t},\r\n\tdeleteComments: {\r\n\t\tloading: false,\r\n\t\tisDelete: false,\r\n\t\tdeleteError: '',\r\n\t},\r\n\tdeleteComment: {\r\n\t\tloading: false,\r\n\t\tisDelete: false,\r\n\t\tdeleteError: '',\r\n\t},\r\n\tupdateComment: {\r\n\t\tloading: false,\r\n\t\tisUpdate: false,\r\n\t\tupdateError: '',\r\n\t},\r\n};\r\n\r\n// async\r\nexport const setCommentThunk = createAsyncThunk(\r\n\t'redux-racstagram/comment/setCommentThunk',\r\n\tasync ({ comment, postId }, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tusers: { currentUserInfo },\r\n\t\t\t\tcomment: { comments },\r\n\t\t\t\tprofile: {\r\n\t\t\t\t\tcurrentUser: { uid },\r\n\t\t\t\t},\r\n\t\t\t} = thunkAPI.getState();\r\n\r\n\t\t\tconst commentObj = {\r\n\t\t\t\tuserId: uid,\r\n\t\t\t\tpostId,\r\n\t\t\t\tuserDisplayName: currentUserInfo.displayName,\r\n\t\t\t\tuserPhotoUrl: currentUserInfo.userPhotoUrl,\r\n\t\t\t\tcommentDate: Date.now(),\r\n\t\t\t\tcomment,\r\n\t\t\t\tcount: comments[0] ? comments[0].count + 1 : 1,\r\n\t\t\t};\r\n\t\t\tawait dbService.collection('comments').doc().set(commentObj);\r\n\r\n\t\t\tconst { docs } = await dbService\r\n\t\t\t\t.collection('comments')\r\n\t\t\t\t.where('postId', '==', postId)\r\n\t\t\t\t.orderBy('commentDate', 'desc')\r\n\t\t\t\t.limit(2)\r\n\t\t\t\t.get();\r\n\t\t\tconst commentArray = docs.map((doc) => ({\r\n\t\t\t\tcomment: doc.data().comment,\r\n\t\t\t\tcommentDate: doc.data().commentDate,\r\n\t\t\t\tcommentDisplayName: doc.data().userDisplayName,\r\n\t\t\t\tcommentId: doc.id,\r\n\t\t\t\tcount: doc.data().count,\r\n\t\t\t}));\r\n\t\t\tawait dbService\r\n\t\t\t\t.collection('posts')\r\n\t\t\t\t.doc(postId)\r\n\t\t\t\t.set({ commentArray }, { merge: true });\r\n\r\n\t\t\tthunkAPI.dispatch(getCommentsThunk(postId));\r\n\t\t\tthunkAPI.dispatch(getAllPostsThunk());\r\n\t\t\treturn true;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const getCommentsThunk = createAsyncThunk(\r\n\t'redux-racstagram/comment/getCommentsThunk',\r\n\tasync (postId, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst { docs } = await dbService\r\n\t\t\t\t.collection('comments')\r\n\t\t\t\t.where('postId', '==', postId)\r\n\t\t\t\t.orderBy('commentDate', 'desc')\r\n\t\t\t\t.get();\r\n\t\t\tconst comments = docs.map((doc) => ({\r\n\t\t\t\tcommentId: doc.id,\r\n\t\t\t\t...doc.data(),\r\n\t\t\t}));\r\n\t\t\treturn comments;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const deleteCommentsThunk = createAsyncThunk(\r\n\t'redux-racstagram/comment/deleteCommentsThunk',\r\n\tasync (postId, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst { docs } = await dbService\r\n\t\t\t\t.collection('comments')\r\n\t\t\t\t.where('postId', '==', postId)\r\n\t\t\t\t.get();\r\n\t\t\tconst promises = docs.forEach((doc) => {\r\n\t\t\t\tdbService.collection('comments').doc(doc.id).delete();\r\n\t\t\t});\r\n\t\t\tawait Promise.all(promises);\r\n\t\t\treturn true;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const deleteCommentThunk = createAsyncThunk(\r\n\t'redux-racstagram/comment/deleteCommentThunk',\r\n\tasync ({ commentId, postId }, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\t// comments의 comment delete\r\n\t\t\tawait dbService.collection('comments').doc(commentId).delete();\r\n\t\t\tconst { docs } = await dbService\r\n\t\t\t\t.collection('comments')\r\n\t\t\t\t.where('postId', '==', postId)\r\n\t\t\t\t.orderBy('commentDate', 'desc')\r\n\t\t\t\t.limit(2)\r\n\t\t\t\t.get();\r\n\r\n\t\t\t// delete 이후 최신 comment 가져와서 다시 post 설정\r\n\t\t\tconst commentArray = docs.map((doc) => ({\r\n\t\t\t\tcomment: doc.data().comment,\r\n\t\t\t\tcommentDate: doc.data().commentDate,\r\n\t\t\t\tcommentDisplayName: doc.data().userDisplayName,\r\n\t\t\t\tcommentId: doc.id,\r\n\t\t\t\tcount: doc.data().count,\r\n\t\t\t}));\r\n\t\t\tawait dbService\r\n\t\t\t\t.collection('posts')\r\n\t\t\t\t.doc(postId)\r\n\t\t\t\t.set({ commentArray }, { merge: true });\r\n\t\t\tthunkAPI.dispatch(getCommentsThunk(postId));\r\n\t\t\tthunkAPI.dispatch(getAllPostsThunk());\r\n\t\t\treturn true;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\n// slice\r\n\r\nconst comment = createSlice({\r\n\tname: 'redux-racstagram/comment',\r\n\tinitialState,\r\n\treducers: {},\r\n\textraReducers: {\r\n\t\t[deleteCommentThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tdeleteComment: { ...state.deleteComment, loading: true },\r\n\t\t}),\r\n\t\t[deleteCommentThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tdeleteComment: {\r\n\t\t\t\t...state.deleteComment,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisDelete: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[deleteCommentThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tdeleteComment: {\r\n\t\t\t\t...state.deleteComment,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tdeleteError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[deleteCommentsThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tdeleteComments: { ...state.deleteComments, loading: true },\r\n\t\t}),\r\n\t\t[deleteCommentsThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tdeleteComments: {\r\n\t\t\t\t...state.deleteComments,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisDelete: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[deleteCommentsThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tdeleteComments: {\r\n\t\t\t\t...state.deleteComments,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tdeleteError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[setCommentThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tsetComment: { ...state.setComment, loading: true },\r\n\t\t}),\r\n\t\t[setCommentThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tsetComment: {\r\n\t\t\t\t...state.setComment,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisSet: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[setCommentThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tsetComment: {\r\n\t\t\t\t...state.setComment,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tsetError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[getCommentsThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tgetComments: { ...state.getComments, loading: true },\r\n\t\t}),\r\n\t\t[getCommentsThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tcomments: payload,\r\n\t\t\tgetComments: {\r\n\t\t\t\t...state.getComments,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisGet: true,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[getCommentsThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tgetComments: {\r\n\t\t\t\t...state.getComments,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tgetError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t},\r\n});\r\n\r\nexport default comment.reducer;\r\n\r\n// export const {} = comment.actions\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { dbService } from '../../fBase';\r\n\r\n// InitialState\r\nconst initialState = {\r\n\tallLikes: [],\r\n\tuserLikes: [],\r\n\tgetAllLikes: {\r\n\t\tisGet: false,\r\n\t\tloading: false,\r\n\t\tgetError: {},\r\n\t},\r\n\tgetUserLikes: {\r\n\t\tisGet: false,\r\n\t\tloading: false,\r\n\t\tgetError: {},\r\n\t},\r\n\tgetMoreLikes: {\r\n\t\tisGet: false,\r\n\t\tloading: false,\r\n\t\tgetError: {},\r\n\t\tisNone: false,\r\n\t},\r\n\tsetLikeOff: {\r\n\t\tisSet: false,\r\n\t\tloading: false,\r\n\t\tsetError: {},\r\n\t},\r\n\tsetLikeOn: {\r\n\t\tisSet: false,\r\n\t\tloading: false,\r\n\t\tsetError: {},\r\n\t},\r\n};\r\n\r\n// Async\r\nexport const getMoreLikesThunk = createAsyncThunk(\r\n\t'redux-racstagram/like/getMoreLikesThunk',\r\n\tasync ({ postDate, type, userName }, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tprofile: {\r\n\t\t\t\t\tcurrentUser: { uid },\r\n\t\t\t\t},\r\n\t\t\t} = thunkAPI.getState();\r\n\r\n\t\t\tlet query = dbService.collection('likes').orderBy('postDate', 'desc');\r\n\r\n\t\t\tif (type === 'allPosts') {\r\n\t\t\t} else if (type === 'userPosts') {\r\n\t\t\t\tquery = query.where('userDisplayName', '==', userName);\r\n\t\t\t}\r\n\t\t\tconst { docs } = await query.startAfter(postDate).limit(6).get();\r\n\r\n\t\t\tif (!docs.length) {\r\n\t\t\t\treturn { type: 'none' };\r\n\t\t\t}\r\n\r\n\t\t\tconst likes = docs.map((doc) => ({\r\n\t\t\t\tpostId: doc.id,\r\n\t\t\t\tlikeCount: doc.data().likeCount,\r\n\t\t\t\tisLike: doc.data().likeUsers.includes(uid),\r\n\t\t\t}));\r\n\r\n\t\t\treturn { type, likes };\r\n\t\t} catch ({ message, code }) {\r\n\t\t\treturn thunkAPI.rejectWithValue();\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const getAllLikesThunk = createAsyncThunk(\r\n\t'redux-racstagram/like/getAllLikesThunk',\r\n\tasync (_, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tprofile: {\r\n\t\t\t\t\tcurrentUser: { uid },\r\n\t\t\t\t},\r\n\t\t\t} = thunkAPI.getState();\r\n\r\n\t\t\tconst { docs } = await dbService\r\n\t\t\t\t.collection('likes')\r\n\t\t\t\t.orderBy('postDate', 'desc')\r\n\t\t\t\t.limit(6)\r\n\t\t\t\t.get();\r\n\r\n\t\t\tconst likes = docs.map((doc) => ({\r\n\t\t\t\tpostId: doc.id,\r\n\t\t\t\tlikeCount: doc.data().likeCount,\r\n\t\t\t\tisLike: doc.data().likeUsers.includes(uid),\r\n\t\t\t}));\r\n\r\n\t\t\treturn likes;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const getUserLikesThunk = createAsyncThunk(\r\n\t'redux-racstagram/like/getUserLikesThunk',\r\n\tasync (userName, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tprofile: {\r\n\t\t\t\t\tcurrentUser: { uid },\r\n\t\t\t\t},\r\n\t\t\t} = thunkAPI.getState();\r\n\r\n\t\t\tconst { docs } = await dbService\r\n\t\t\t\t.collection('likes')\r\n\t\t\t\t.where('userDisplayName', '==', userName)\r\n\t\t\t\t.orderBy('postDate', 'desc')\r\n\t\t\t\t.limit(6)\r\n\t\t\t\t.get();\r\n\r\n\t\t\tconst likes = docs.map((doc) => ({\r\n\t\t\t\tpostId: doc.id,\r\n\t\t\t\tlikeCount: doc.data().likeCount,\r\n\t\t\t\tisLike: doc.data().likeUsers.includes(uid),\r\n\t\t\t}));\r\n\r\n\t\t\treturn likes;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const setLikeOnThunk = createAsyncThunk(\r\n\t'redux-racstagram/like/setLikeOnThunk',\r\n\tasync ({ postId, type }, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tprofile: {\r\n\t\t\t\t\tcurrentUser: { uid },\r\n\t\t\t\t},\r\n\t\t\t\tlike,\r\n\t\t\t} = thunkAPI.getState();\r\n\t\t\tconst doc = dbService.collection('likes').doc(postId);\r\n\t\t\tconst prevDoc = await doc.get();\r\n\r\n\t\t\tawait doc.set(\r\n\t\t\t\t{\r\n\t\t\t\t\tlikeCount: prevDoc.data().likeCount + 1,\r\n\t\t\t\t\tlikeUsers: [...prevDoc.data().likeUsers, uid],\r\n\t\t\t\t},\r\n\t\t\t\t{ merge: true }\r\n\t\t\t);\r\n\r\n\t\t\tconst res = like[type].map((like) => {\r\n\t\t\t\tif (like.postId === postId) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...like,\r\n\t\t\t\t\t\tlikeCount: like.likeCount + 1,\r\n\t\t\t\t\t\tisLike: true,\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn like;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthunkAPI.dispatch(setLikeOn({ res, type }));\r\n\t\t\treturn true;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const setLikeOffThunk = createAsyncThunk(\r\n\t'redux-racstagram/like/setLikeOffThunk',\r\n\tasync ({ postId, type }, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tprofile: {\r\n\t\t\t\t\tcurrentUser: { uid },\r\n\t\t\t\t},\r\n\t\t\t\tlike,\r\n\t\t\t} = thunkAPI.getState();\r\n\t\t\tconst doc = dbService.collection('likes').doc(postId);\r\n\t\t\tconst prevDoc = await doc.get();\r\n\r\n\t\t\tawait doc.set(\r\n\t\t\t\t{\r\n\t\t\t\t\tlikeCount: prevDoc.data().likeCount - 1,\r\n\t\t\t\t\tlikeUsers: prevDoc\r\n\t\t\t\t\t\t.data()\r\n\t\t\t\t\t\t.likeUsers.filter((userId) => userId !== uid),\r\n\t\t\t\t},\r\n\t\t\t\t{ merge: true }\r\n\t\t\t);\r\n\r\n\t\t\tconst res = like[type].map((like) => {\r\n\t\t\t\tif (like.postId === postId) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...like,\r\n\t\t\t\t\t\tlikeCount: like.likeCount - 1,\r\n\t\t\t\t\t\tisLike: false,\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn like;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthunkAPI.dispatch(setLikeOff({ res, type }));\r\n\r\n\t\t\treturn true;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\nconst like = createSlice({\r\n\tname: 'redux-racstagram/like',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tresetGetMoreLikes: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tgetMoreLikes: { ...initialState.getMoreLikes },\r\n\t\t}),\r\n\t\tresetUserLikes: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tuserLikes: [...initialState.userLikes],\r\n\t\t}),\r\n\t\tsetLikeOn: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\t[payload.type]: payload.res,\r\n\t\t}),\r\n\t\tsetLikeOff: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\t[payload.type]: payload.res,\r\n\t\t}),\r\n\t},\r\n\textraReducers: {\r\n\t\t[getMoreLikesThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tgetMoreLikes: { ...state.getMoreLikes, loading: true },\r\n\t\t}),\r\n\t\t[getMoreLikesThunk.fulfilled]: (state, { payload }) => {\r\n\t\t\tif (payload.type === 'allPosts') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tallLikes: [...state.allLikes, ...payload.likes],\r\n\t\t\t\t\tgetMoreLikes: {\r\n\t\t\t\t\t\t...state.getMoreLikes,\r\n\t\t\t\t\t\tloading: false,\r\n\t\t\t\t\t\tisGet: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t} else if (payload.type === 'userPosts') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tuserLikes: [...state.userLikes, ...payload.likes],\r\n\t\t\t\t\tgetMoreLikes: {\r\n\t\t\t\t\t\t...state.getMoreLikes,\r\n\t\t\t\t\t\tloading: false,\r\n\t\t\t\t\t\tisGet: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t} else if (payload.type === 'none') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tgetMoreLikes: {\r\n\t\t\t\t\t\t...state.getMoreLikes,\r\n\t\t\t\t\t\tloading: false,\r\n\t\t\t\t\t\tisGet: true,\r\n\t\t\t\t\t\tisNone: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getMoreLikesThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tgetMoreLikes: {\r\n\t\t\t\t...state.getMoreLikes,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tgetError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t// getAllLikesThunk\r\n\t\t[getAllLikesThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tgetAllLikes: { ...state.getAllLikes, loading: true },\r\n\t\t}),\r\n\t\t[getAllLikesThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tallLikes: payload,\r\n\t\t\tgetAllLikes: { ...state.getAllLikes, loading: false, isGet: true },\r\n\t\t}),\r\n\t\t[getAllLikesThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tgetLikes: {\r\n\t\t\t\t...state.getLikes,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tgetError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t// getUserLikesThunk\r\n\t\t[getUserLikesThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tgetUserLikes: { ...state.getUserLikes, loading: true },\r\n\t\t}),\r\n\t\t[getUserLikesThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tuserLikes: payload,\r\n\t\t\tgetUserLikes: { ...state.getUserLikes, loading: false, isGet: true },\r\n\t\t}),\r\n\t\t[getUserLikesThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tgetUserLikes: {\r\n\t\t\t\t...state.getUserLikes,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tgetError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[setLikeOnThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tsetLikeOn: { ...state.setLikeOn, loading: true },\r\n\t\t}),\r\n\t\t[setLikeOnThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tsetLikeOn: {\r\n\t\t\t\t...state.setLikeOn,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisSet: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[setLikeOnThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tsetLikeOn: {\r\n\t\t\t\t...state.setLikeOn,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tsetError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[setLikeOffThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tsetLikeOff: { ...state.setLikeOff, loading: true },\r\n\t\t}),\r\n\t\t[setLikeOffThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tsetLikeOff: {\r\n\t\t\t\t...state.setLikeOff,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisSet: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[setLikeOffThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tsetLikeOff: {\r\n\t\t\t\t...state.setLikeOff,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tsetError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t},\r\n});\r\n\r\nexport default like.reducer;\r\n\r\n// ActionCreator\r\nexport const { resetGetMoreLikes, resetUserLikes, setLikeOn, setLikeOff } =\r\n\tlike.actions;\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { v4 as uuidV4 } from 'uuid';\r\nimport { dbService } from '../../fBase';\r\nimport { deleteCommentsThunk } from './comment';\r\nimport { deleteImageUrlThunk, resetImage } from './image';\r\nimport { getAllLikesThunk, getMoreLikesThunk, getUserLikesThunk } from './like';\r\n\r\n/* \r\nposts\r\n [\r\n  {\r\n    postId,\r\n    postDate,\r\n    postImageUrl,\r\n    postText,\r\n    userDisplayName,\r\n    userId,\r\n    userPhotoUrl,\r\n    commentArray,\r\n    likeCount,\r\n    isLike\r\n  }\r\n] \r\n*/\r\n\r\n// Initial State\r\nconst initialState = {\r\n\tallPosts: [],\r\n\tuserPosts: [],\r\n\tprevScrollY: 0,\r\n\tgetMorePosts: {\r\n\t\tisGet: false,\r\n\t\tloading: false,\r\n\t\tgetError: {},\r\n\t\tisNone: false,\r\n\t},\r\n\tgetAllPosts: {\r\n\t\tisGet: false,\r\n\t\tloading: false,\r\n\t\tgetError: {},\r\n\t},\r\n\tgetUserPosts: {\r\n\t\tisGet: false,\r\n\t\tloading: false,\r\n\t\tgetError: {},\r\n\t},\r\n\tcreatePost: {\r\n\t\tisSet: false,\r\n\t\tloading: false,\r\n\t\tsetError: {},\r\n\t},\r\n\tupdatePost: {\r\n\t\tisUpdate: false,\r\n\t\tloading: false,\r\n\t\tupdateError: {},\r\n\t},\r\n\tdeletePost: {\r\n\t\tisDelete: false,\r\n\t\tloading: false,\r\n\t\tdeleteError: {},\r\n\t},\r\n\tupdatePostsUserInfo: {\r\n\t\tisUpdate: false,\r\n\t\tloading: false,\r\n\t\tupdateError: {},\r\n\t},\r\n};\r\n\r\n// Async\r\nexport const updatePostsUserInfoThunk = createAsyncThunk(\r\n\t'redux-racstagram/post/updatePostsUserInfoThunk',\r\n\tasync (info, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst { userPhotoUrl, userDisplayName } = info;\r\n\t\t\tconst {\r\n\t\t\t\tprofile: { currentUser },\r\n\t\t\t} = thunkAPI.getState();\r\n\t\t\tconst { docs } = await dbService\r\n\t\t\t\t.collection('posts')\r\n\t\t\t\t.where('userId', '==', currentUser.uid)\r\n\t\t\t\t.get();\r\n\t\t\tconst posts = [...docs];\r\n\t\t\tfor await (let post of posts) {\r\n\t\t\t\tdbService\r\n\t\t\t\t\t.collection('posts')\r\n\t\t\t\t\t.doc(post.id)\r\n\t\t\t\t\t.update({\r\n\t\t\t\t\t\t...(userPhotoUrl && { userPhotoUrl }),\r\n\t\t\t\t\t\t...(userDisplayName && { userDisplayName }),\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const updatePostThunk = createAsyncThunk(\r\n\t'redux-racstagram/post/updatePostThunk',\r\n\tasync (inputs, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tprofile: { currentUser },\r\n\t\t\t\timage: { imageUrl: postImageUrl },\r\n\t\t\t} = await thunkAPI.getState();\r\n\t\t\tconst {\r\n\t\t\t\tpostId,\r\n\t\t\t\ttext: postText,\r\n\t\t\t\tprevImageUrl,\r\n\t\t\t\timageBase64,\r\n\t\t\t\tuserId,\r\n\t\t\t} = inputs;\r\n\t\t\t// 유저 방어 코드\r\n\t\t\tif (userId === currentUser.uid) {\r\n\t\t\t\tif (prevImageUrl !== imageBase64) {\r\n\t\t\t\t\tthunkAPI.dispatch(deleteImageUrlThunk(prevImageUrl));\r\n\t\t\t\t}\r\n\t\t\t\tawait dbService\r\n\t\t\t\t\t.collection('posts')\r\n\t\t\t\t\t.doc(postId)\r\n\t\t\t\t\t.update({\r\n\t\t\t\t\t\t...(postImageUrl && { postImageUrl }),\r\n\t\t\t\t\t\t...(postText && { postText }),\r\n\t\t\t\t\t});\r\n\t\t\t\tthunkAPI.dispatch(getAllPostsThunk());\r\n\t\t\t\tthunkAPI.dispatch(resetImage());\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Invalid user access!');\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const deletePostThunk = createAsyncThunk(\r\n\t'redux-racstagram/post/deletePostThunk',\r\n\tasync (post, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tprofile: { currentUser },\r\n\t\t\t} = await thunkAPI.getState();\r\n\t\t\tconst { postId, postImageUrl, userId } = post;\r\n\t\t\t// 유저 방어 코드\r\n\t\t\tif (userId === currentUser.uid) {\r\n\t\t\t\tawait dbService.collection('posts').doc(postId).delete();\r\n\t\t\t\tthunkAPI.dispatch(deleteCommentsThunk(postId));\r\n\t\t\t\tdbService.collection('likes').doc(postId).delete();\r\n\t\t\t\tif (postImageUrl !== '') {\r\n\t\t\t\t\tawait thunkAPI.dispatch(deleteImageUrlThunk(postImageUrl));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Invalid user access!');\r\n\t\t\t}\r\n\t\t\tawait thunkAPI.dispatch(resetImage());\r\n\t\t\treturn true;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const createPostThunk = createAsyncThunk(\r\n\t'redux-racstagram/post/createPostThunk',\r\n\tasync (text, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tprofile: { currentUser },\r\n\t\t\t\timage: { imageUrl },\r\n\t\t\t\tusers: { currentUserInfo },\r\n\t\t\t} = await thunkAPI.getState();\r\n\t\t\tconst postDate = Date.now();\r\n\t\t\tconst post = {\r\n\t\t\t\tpostText: text,\r\n\t\t\t\tpostDate,\r\n\t\t\t\tuserId: currentUser.uid,\r\n\t\t\t\tuserPhotoUrl: currentUserInfo.userPhotoUrl,\r\n\t\t\t\tuserDisplayName: currentUserInfo.displayName,\r\n\t\t\t\tpostImageUrl: imageUrl,\r\n\t\t\t\tcommentArray: [],\r\n\t\t\t};\r\n\t\t\tconst postId = uuidV4();\r\n\t\t\tawait Promise.all([\r\n\t\t\t\tdbService.collection('posts').doc(postId).set(post),\r\n\t\t\t\tdbService.collection('likes').doc(postId).set({\r\n\t\t\t\t\tpostId,\r\n\t\t\t\t\tuserDisplayName: currentUserInfo.displayName,\r\n\t\t\t\t\tpostDate,\r\n\t\t\t\t\tlikeCount: 0,\r\n\t\t\t\t\tlikeUsers: [],\r\n\t\t\t\t}),\r\n\t\t\t]);\r\n\t\t\tawait thunkAPI.dispatch(resetImage());\r\n\r\n\t\t\treturn true;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({\r\n\t\t\t\tcode,\r\n\t\t\t\tmessage,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const getMorePostsThunk = createAsyncThunk(\r\n\t'redux-racstagram/post/getMorePostsThunk',\r\n\tasync ({ postDate, type, userName }, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tthunkAPI.dispatch(getMoreLikesThunk({ postDate, type, userName }));\r\n\t\t\tlet query = dbService.collection('posts').orderBy('postDate', 'desc');\r\n\r\n\t\t\tif (type === 'allPosts') {\r\n\t\t\t} else if (type === 'userPosts') {\r\n\t\t\t\tquery = query.where('userDisplayName', '==', userName);\r\n\t\t\t}\r\n\t\t\tconst { docs } = await query.startAfter(postDate).limit(6).get();\r\n\r\n\t\t\tif (!docs.length) {\r\n\t\t\t\treturn { type: 'none' };\r\n\t\t\t}\r\n\r\n\t\t\tconst posts = docs.map((doc) => ({\r\n\t\t\t\tpostId: doc.id,\r\n\t\t\t\t...doc.data(),\r\n\t\t\t}));\r\n\r\n\t\t\treturn { posts, type };\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const getAllPostsThunk = createAsyncThunk(\r\n\t'redux-racstagram/post/getAllPostsThunk',\r\n\tasync (_, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tthunkAPI.dispatch(getAllLikesThunk());\r\n\t\t\tconst { docs } = await dbService\r\n\t\t\t\t.collection('posts')\r\n\t\t\t\t.orderBy('postDate', 'desc')\r\n\t\t\t\t.limit(6)\r\n\t\t\t\t.get();\r\n\r\n\t\t\tconst posts = docs.map((doc) => ({\r\n\t\t\t\tpostId: doc.id,\r\n\t\t\t\t...doc.data(),\r\n\t\t\t}));\r\n\r\n\t\t\treturn posts;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const getUserPostsThunk = createAsyncThunk(\r\n\t'redux-racstagram/post/getUserPostsThunk',\r\n\tasync (userName, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tthunkAPI.dispatch(getUserLikesThunk(userName));\r\n\t\t\tconst { docs } = await dbService\r\n\t\t\t\t.collection('posts')\r\n\t\t\t\t.where('userDisplayName', '==', userName)\r\n\t\t\t\t.orderBy('postDate', 'desc')\r\n\t\t\t\t.limit(6)\r\n\t\t\t\t.get();\r\n\r\n\t\t\tconst posts = docs.map((doc) => ({\r\n\t\t\t\tpostId: doc.id,\r\n\t\t\t\t...doc.data(),\r\n\t\t\t}));\r\n\t\t\treturn posts;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\n// Slice\r\nconst post = createSlice({\r\n\tname: 'redux-racstagram/post',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tresetUserPosts: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tuserPosts: initialState.userPosts,\r\n\t\t}),\r\n\t\tresetGetMorePosts: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tgetMorePosts: { ...initialState.getMorePosts },\r\n\t\t}),\r\n\t\tsetPrevScrollY: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tprevScrollY: payload,\r\n\t\t}),\r\n\t\tresetGetUserPosts: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tgetUserPosts: { ...initialState.getUserPosts },\r\n\t\t}),\r\n\t},\r\n\textraReducers: {\r\n\t\t[updatePostsUserInfoThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tupdatePostUserInfo: { ...state.updatePostUserInfo, loading: true },\r\n\t\t}),\r\n\t\t[updatePostsUserInfoThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tupdatePostUserInfo: {\r\n\t\t\t\t...state.updatePostUserInfo,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisUpdate: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[updatePostsUserInfoThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tupdatePostUserInfo: {\r\n\t\t\t\t...state.updatePostUserInfo,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tupdateError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[createPostThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tcreatePost: { ...state.createPost, loading: true },\r\n\t\t}),\r\n\t\t[createPostThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tcreatePost: {\r\n\t\t\t\t...state.createPost,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisSet: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[createPostThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tcreatePost: {\r\n\t\t\t\t...state.createPost,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tsetError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[getAllPostsThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tgetAllPosts: { ...state.getAllPosts, loading: true },\r\n\t\t}),\r\n\t\t[getAllPostsThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tallPosts: payload,\r\n\t\t\tgetAllPosts: { ...state.getAllPosts, loading: false, isGet: true },\r\n\t\t}),\r\n\t\t[getAllPostsThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tgetAllPosts: {\r\n\t\t\t\t...state.getAllPosts,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tgetError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[getMorePostsThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tgetMorePosts: { ...state.getMorePosts, loading: true },\r\n\t\t}),\r\n\t\t[getMorePostsThunk.fulfilled]: (state, { payload }) => {\r\n\t\t\tif (payload.type === 'allPosts') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tallPosts: [...state.allPosts, ...payload.posts],\r\n\t\t\t\t\tgetMorePosts: {\r\n\t\t\t\t\t\t...state.getMorePosts,\r\n\t\t\t\t\t\tloading: false,\r\n\t\t\t\t\t\tisGet: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t} else if (payload.type === 'userPosts') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tuserPosts: [...state.userPosts, ...payload.posts],\r\n\t\t\t\t\tgetMorePosts: {\r\n\t\t\t\t\t\t...state.getMorePosts,\r\n\t\t\t\t\t\tloading: false,\r\n\t\t\t\t\t\tisGet: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t} else if (payload.type === 'none') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tgetMorePosts: {\r\n\t\t\t\t\t\t...state.getMorePosts,\r\n\t\t\t\t\t\tloading: false,\r\n\t\t\t\t\t\tisGet: true,\r\n\t\t\t\t\t\tisNone: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getMorePostsThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tgetMorePosts: {\r\n\t\t\t\t...state.getMorePosts,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tgetError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[getUserPostsThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tgetUserPosts: { ...state.getUserPosts, loading: true },\r\n\t\t}),\r\n\t\t[getUserPostsThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tuserPosts: payload,\r\n\t\t\tgetUserPosts: {\r\n\t\t\t\t...state.getUserPosts,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisGet: true,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[getUserPostsThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tgetUserPosts: {\r\n\t\t\t\t...state.getUserPosts,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tgetError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[deletePostThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tdeletePost: { ...state.deletePost, loading: true },\r\n\t\t}),\r\n\t\t[deletePostThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tdeletePost: {\r\n\t\t\t\t...state.deletePost,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisDelete: true,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[deletePostThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tdeletePost: {\r\n\t\t\t\t...state.deletePost,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tdeleteError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[updatePostThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tupdatePost: { ...state.updatePost, loading: true },\r\n\t\t}),\r\n\t\t[updatePostThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tupdatePost: { ...state.updatePost, isUpdate: payload, loading: false },\r\n\t\t}),\r\n\t\t[updatePostThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tupdatePost: {\r\n\t\t\t\t...state.updatePost,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tupdateError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t},\r\n});\r\n\r\nexport default post.reducer;\r\n\r\n// actionCreator\r\nexport const {\r\n\tresetPost,\r\n\tsetPostFormError,\r\n\tresetGetMorePosts,\r\n\tsetPrevScrollY,\r\n\tresetGetUserPosts,\r\n\tresetUserPosts,\r\n} = post.actions;\r\n","const useRandom = (count, range, except) => {\r\n\tif (count > range - 1 || except === undefined) {\r\n\t\treturn [];\r\n\t}\r\n\tconst randomSet = new Set();\r\n\twhile (randomSet.size < count) {\r\n\t\tconst temp = Math.floor(Math.random() * range) + 1;\r\n\t\tif (temp === except) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\trandomSet.add(temp);\r\n\t}\r\n\treturn [...randomSet];\r\n};\r\n\r\nexport default useRandom;\r\n\r\n/* \r\ncount : 뽑을 개수\r\nrange : 정수 숫자 범위\r\nexcept : 뽑는 숫자중에 제외할 정수\r\nreturn : 일정 범위(0이상 ~ range 이하) 숫자에서 일정한 개수의 랜덤 숫자가 들어간 배열을 반환 (except 고려)\r\n*/\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { dbService } from '../../fBase';\r\nimport useRandom from '../../hooks/useRandom';\r\n\r\n// Initial State\r\n\r\nconst initialState = {\r\n\tcurrentUserInfo: {\r\n\t\tuserPhotoUrl: '',\r\n\t\tuserIntro: '',\r\n\t\tdisplayName: '',\r\n\t\tsubDisplayName: '',\r\n\t\twebsite: '',\r\n\t},\r\n\tuserInfo: {\r\n\t\tuserId: '',\r\n\t\tuserPhotoUrl: '',\r\n\t\tuserDisplayName: '',\r\n\t\tuserIntro: '',\r\n\t},\r\n\trandomUserInfo: [],\r\n\tuserMaxCount: 0,\r\n\tgetCurrentUserInfo: {\r\n\t\tisGet: false,\r\n\t\tloading: false,\r\n\t\tgetError: '',\r\n\t},\r\n\tgetUserInfo: {\r\n\t\tisGet: false,\r\n\t\tloading: false,\r\n\t\tgetError: '',\r\n\t},\r\n\tgetRandomUserInfo: {\r\n\t\tisGet: false,\r\n\t\tloading: false,\r\n\t\tgetError: '',\r\n\t},\r\n\tsetCurrentUserInfo: {\r\n\t\tisSet: false,\r\n\t\tloading: false,\r\n\t\tsetError: '',\r\n\t},\r\n\tcheckDisplayName: {\r\n\t\tloading: false,\r\n\t\tisCheck: false,\r\n\t\tcheckError: '',\r\n\t\texist: [false, ''],\r\n\t},\r\n\tgetUserMaxCount: {\r\n\t\tisGet: false,\r\n\t\tloading: false,\r\n\t\tgetError: '',\r\n\t},\r\n};\r\n\r\n// async\r\nexport const getUserMaxCountThunk = createAsyncThunk(\r\n\t'redux-racstagram/users/getUserMaxCountThunk',\r\n\tasync (_, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst { docs } = await dbService\r\n\t\t\t\t.collection('users')\r\n\t\t\t\t.orderBy('count', 'desc')\r\n\t\t\t\t.limit(1)\r\n\t\t\t\t.get();\r\n\t\t\tconst res = docs.length ? docs[0].data() : { count: -1 };\r\n\t\t\treturn res.count;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\nexport const getRandomUserInfoThunk = createAsyncThunk(\r\n\t'redux-racstagram/users/getRandomUserInfoThunk',\r\n\tasync (_, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tawait thunkAPI.dispatch(getUserMaxCountThunk());\r\n\t\t\tconst {\r\n\t\t\t\tusers: {\r\n\t\t\t\t\tcurrentUserInfo: { count },\r\n\t\t\t\t\tuserMaxCount,\r\n\t\t\t\t},\r\n\t\t\t} = await thunkAPI.getState();\r\n\r\n\t\t\tif (userMaxCount === -1) {\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t\tconst random = useRandom(2, userMaxCount, count);\r\n\t\t\tconst { docs } = await dbService\r\n\t\t\t\t.collection('users')\r\n\t\t\t\t.where('count', 'in', random)\r\n\t\t\t\t.get();\r\n\r\n\t\t\tconst res = docs.map((doc) => {\r\n\t\t\t\tconst { displayName, userPhotoUrl } = doc.data();\r\n\t\t\t\treturn { displayName, userPhotoUrl };\r\n\t\t\t});\r\n\t\t\treturn res;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const checkDisplayNameThunk = createAsyncThunk(\r\n\t'redux-racstagram/users/checkDisplayNameThunk',\r\n\tasync (userName, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst { docs } = await dbService\r\n\t\t\t\t.collection('users')\r\n\t\t\t\t.where('displayName', '==', userName)\r\n\t\t\t\t.get();\r\n\t\t\tconst res = [!!docs[0], userName];\r\n\t\t\treturn res;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const getUserInfoThunk = createAsyncThunk(\r\n\t'redux-racstagram/users/getUserInfoThunk',\r\n\tasync (userName, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst { docs } = await dbService\r\n\t\t\t\t.collection('users')\r\n\t\t\t\t.where('displayName', '==', userName)\r\n\t\t\t\t.get();\r\n\t\t\tconst res = { ...docs[0].data(), userId: docs[0].id };\r\n\t\t\treturn res;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\n// userId, userPhotoUrl, userDisplayName, userIntro\r\nexport const setCurrentUserInfoThunk = createAsyncThunk(\r\n\t'redux-racstagram/users/setCurrentUserInfoThunk',\r\n\tasync (payload, thunkAPI) => {\r\n\t\tconst {\r\n\t\t\tprofile: { currentUser },\r\n\t\t} = thunkAPI.getState();\r\n\t\tconst {\r\n\t\t\tuserPhotoUrl,\r\n\t\t\tdisplayName,\r\n\t\t\tuserIntro,\r\n\t\t\tsubDisplayName,\r\n\t\t\twebsite,\r\n\t\t\tcount,\r\n\t\t} = payload;\r\n\t\ttry {\r\n\t\t\tawait dbService\r\n\t\t\t\t.collection('users')\r\n\t\t\t\t.doc(currentUser.uid)\r\n\t\t\t\t.set(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t...(userPhotoUrl && { userPhotoUrl }),\r\n\t\t\t\t\t\t...(displayName && { displayName }),\r\n\t\t\t\t\t\t...(subDisplayName ? { subDisplayName } : { subDisplayName: '' }),\r\n\t\t\t\t\t\t...(userIntro ? { userIntro } : { userIntro: '' }),\r\n\t\t\t\t\t\t...(website ? { website } : { website: '' }),\r\n\t\t\t\t\t\t...(count && { count }),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ merge: true }\r\n\t\t\t\t);\r\n\t\t\tawait thunkAPI.dispatch(getCurrentUserInfoThunk());\r\n\t\t\treturn true;\r\n\t\t} catch ({ error, code }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ error, code });\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const getCurrentUserInfoThunk = createAsyncThunk(\r\n\t'redux-racstagram/users/getCurrentUserInfoThunk',\r\n\tasync (_, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tprofile: { currentUser },\r\n\t\t\t} = thunkAPI.getState();\r\n\t\t\tconst doc = await dbService\r\n\t\t\t\t.collection('users')\r\n\t\t\t\t.doc(currentUser.uid)\r\n\t\t\t\t.get();\r\n\t\t\treturn { ...doc.data() };\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\n// Slice\r\nconst users = createSlice({\r\n\tname: 'redux-racstagram/users',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tresetUsers: () => ({ ...initialState }),\r\n\t\tresetUserInfo: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tuserInfo: initialState.userInfo,\r\n\t\t}),\r\n\t},\r\n\textraReducers: {\r\n\t\t[checkDisplayNameThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tcheckDisplayName: { ...state.checkDisplayName, loading: true },\r\n\t\t}),\r\n\t\t[checkDisplayNameThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tcheckDisplayName: {\r\n\t\t\t\t...state.checkDisplayName,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisCheck: true,\r\n\t\t\t\texist: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[checkDisplayNameThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tcheckDisplayName: {\r\n\t\t\t\t...state.checkDisplayName,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tcheckError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\r\n\t\t[getUserInfoThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tgetUserInfo: { ...state.getUserInfo, loading: true },\r\n\t\t}),\r\n\t\t[getUserInfoThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tuserInfo: payload,\r\n\t\t\tgetUserInfo: {\r\n\t\t\t\t...state.getUserInfo,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisGet: true,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[getUserInfoThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tgetUserInfo: {\r\n\t\t\t\t...state.getUserInfo,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tgetError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[setCurrentUserInfoThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tsetCurrentUserInfo: { ...state.setCurrentUserInfo, loading: true },\r\n\t\t}),\r\n\t\t[setCurrentUserInfoThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tsetCurrentUserInfo: {\r\n\t\t\t\t...state.setCurrentUserInfo,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisSet: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[setCurrentUserInfoThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tsetCurrentUserInfo: {\r\n\t\t\t\t...state.setCurrentUserInfo,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tsetError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[getCurrentUserInfoThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tgetCurrentUserInfo: { ...state.getCurrentUserInfo, loading: true },\r\n\t\t}),\r\n\t\t[getCurrentUserInfoThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tcurrentUserInfo: { ...state.currentUserInfo, ...payload },\r\n\t\t\tgetCurrentUserInfo: {\r\n\t\t\t\t...state.getCurrentUserInfo,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisGet: true,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[getCurrentUserInfoThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tgetCurrentUserInfo: {\r\n\t\t\t\t...state.getCurrentUserInfo,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tgetError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[getRandomUserInfoThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tgetRandomUserInfo: { ...state.getRandomUserInfo, loading: true },\r\n\t\t}),\r\n\t\t[getRandomUserInfoThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\trandomUserInfo: payload,\r\n\t\t\tgetRandomUserInfo: {\r\n\t\t\t\t...state.getRandomUserInfo,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisGet: true,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[getRandomUserInfoThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tgetRandomUserInfo: {\r\n\t\t\t\t...state.getRandomUserInfo,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tgetError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[getUserMaxCountThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tgetUserMaxCount: { ...state.getUserMaxCount, loading: true },\r\n\t\t}),\r\n\t\t[getUserMaxCountThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tuserMaxCount: payload,\r\n\t\t\tgetUserMaxCount: {\r\n\t\t\t\t...state.getUserMaxCount,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisGet: true,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[getUserMaxCountThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tgetUserMaxCount: {\r\n\t\t\t\t...state.getUserMaxCount,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tgetError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t},\r\n});\r\n\r\nexport default users.reducer;\r\n\r\n// actionCreator\r\nexport const { resetUsers, resetUserInfo } = users.actions;\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { deleteImageUrlThunk, resetImage } from './image';\r\nimport { setCurrentUserInfoThunk } from './users';\r\nimport { getAllPostsThunk, updatePostsUserInfoThunk } from './post';\r\n\r\n// Initial State\r\nconst initialState = {\r\n\tupdateProfile: {\r\n\t\tloading: false,\r\n\t\tisUpdate: false,\r\n\t\tupdateError: '',\r\n\t},\r\n\tcurrentUser: {\r\n\t\tisSignIn: false,\r\n\t\tuid: '',\r\n\t},\r\n};\r\n\r\n// Async\r\n\r\nexport const updateProfileThunk = createAsyncThunk(\r\n\t'redux-racstagram/profile/updateProfileThunk',\r\n\tasync (inputs, thunkAPI) => {\r\n\t\tconst {\r\n\t\t\timage: { imageUrl },\r\n\t\t} = await thunkAPI.getState();\r\n\t\tconst {\r\n\t\t\tdisplayName,\r\n\t\t\timageBase64,\r\n\t\t\tprevImageUrl,\r\n\t\t\tuserIntro,\r\n\t\t\tsubDisplayName,\r\n\t\t\twebsite,\r\n\t\t} = inputs;\r\n\r\n\t\t// 이전 storage 이미지 파일 제거 처리 (초반 외부 image URL인 경우 에러 제외)\r\n\t\tif (prevImageUrl !== imageBase64) {\r\n\t\t\tthunkAPI.dispatch(deleteImageUrlThunk(prevImageUrl));\r\n\t\t}\r\n\t\t// 추가하는 이미지 url & displayName 반영 하기\r\n\t\ttry {\r\n\t\t\tif (userIntro || displayName || imageBase64) {\r\n\t\t\t\tawait Promise.all([\r\n\t\t\t\t\tthunkAPI.dispatch(\r\n\t\t\t\t\t\tsetCurrentUserInfoThunk({\r\n\t\t\t\t\t\t\tuserIntro,\r\n\t\t\t\t\t\t\tdisplayName,\r\n\t\t\t\t\t\t\tuserPhotoUrl: imageUrl,\r\n\t\t\t\t\t\t\tsubDisplayName,\r\n\t\t\t\t\t\t\twebsite,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t),\r\n\t\t\t\t\tthunkAPI.dispatch(\r\n\t\t\t\t\t\tupdatePostsUserInfoThunk({\r\n\t\t\t\t\t\t\tuserDisplayName: displayName,\r\n\t\t\t\t\t\t\tuserPhotoUrl: imageUrl,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t),\r\n\t\t\t\t]);\r\n\t\t\t\tawait thunkAPI.dispatch(resetImage());\r\n\t\t\t\tthunkAPI.dispatch(getAllPostsThunk());\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\n// Slice\r\nconst profile = createSlice({\r\n\tname: 'redux-racstagram/profile',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tresetProfile: () => ({ ...initialState }),\r\n\t\tsetCurrentUser: {\r\n\t\t\treducer: (state, { payload }) => ({\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentUser: { ...state.currentUser, ...payload },\r\n\t\t\t}),\r\n\t\t\tprepare: ({ uid }) => ({\r\n\t\t\t\tpayload: uid\r\n\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t...(uid && { uid }),\r\n\t\t\t\t\t\t\tisSignIn: true,\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t...initialState.currentUser,\r\n\t\t\t\t\t  },\r\n\t\t\t}),\r\n\t\t},\r\n\t},\r\n\textraReducers: {\r\n\t\t[updateProfileThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tupdateProfile: { ...state.updateProfile, loading: true },\r\n\t\t}),\r\n\t\t[updateProfileThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tupdateProfile: {\r\n\t\t\t\t...state.updateProfile,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisUpdate: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[updateProfileThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tupdateProfile: {\r\n\t\t\t\t...state.updateProfile,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tupdateError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t},\r\n});\r\n\r\nexport default profile.reducer;\r\n\r\n// actionCreator\r\nexport const { setCurrentUser, resetProfile } = profile.actions;\r\n\r\n// post 위치의 getImageUrl 공유 위치로 옮기기\r\n// profile photo storage에서 지우는 것은 보류\r\n// 소셜 로그인으로 들어와서 profile을 가져온다면, 해당 이미지는 storage에 들어있지 않으므로 관리할 수 가 없음\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { authService, firebaseInstance } from '../../fBase';\r\nimport { resetImage } from './image';\r\nimport { resetPost } from './post';\r\nimport { resetProfile } from './profile';\r\nimport {\r\n\tgetCurrentUserInfoThunk,\r\n\tgetRandomUserInfoThunk,\r\n\tgetUserMaxCountThunk,\r\n\tresetUsers,\r\n\tsetCurrentUserInfoThunk,\r\n} from './users';\r\n\r\n// Initial State\r\nconst initialState = {\r\n\terrorSelector: '',\r\n\temailSignUp: {\r\n\t\tisSignUp: false,\r\n\t\tloading: false,\r\n\t\tsignUpError: '',\r\n\t},\r\n\temailSignIn: {\r\n\t\tisSignIn: false,\r\n\t\tloading: false,\r\n\t\tsignInError: '',\r\n\t},\r\n\tsocialSignIn: {\r\n\t\tisSignIn: false,\r\n\t\tloading: false,\r\n\t\tsignInError: '',\r\n\t},\r\n\tsignOut: {\r\n\t\tisSignOut: false,\r\n\t\tloading: false,\r\n\t\tsignOutError: '',\r\n\t},\r\n};\r\n\r\nexport const DEFAULT_USER_IMAGE =\r\n\t'https://firebasestorage.googleapis.com/v0/b/rwitter-914af.appspot.com/o/user_icon.png?alt=media&token=f4e74544-2aff-4657-aa59-117adb4aad65';\r\n// async\r\nexport const signOutThunk = createAsyncThunk(\r\n\t'redux-racstagram/auth/signOutThunk',\r\n\tasync (_, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tawait Promise.all([\r\n\t\t\t\tauthService.signOut(),\r\n\t\t\t\tthunkAPI.dispatch(resetPost()),\r\n\t\t\t\tthunkAPI.dispatch(resetImage()),\r\n\t\t\t\tthunkAPI.dispatch(resetProfile()),\r\n\t\t\t\tthunkAPI.dispatch(resetUsers()),\r\n\t\t\t]);\r\n\t\t\treturn true;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\treturn thunkAPI.rejectWithValue({\r\n\t\t\t\tcode,\r\n\t\t\t\tmessage,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n);\r\nexport const emailSignUpThunk = createAsyncThunk(\r\n\t'redux-racstagram/auth/emailSignUpThunk',\r\n\tasync (data, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst { email, password } = data;\r\n\t\t\tawait authService.createUserWithEmailAndPassword(email, password);\r\n\t\t\tawait thunkAPI.dispatch(emailSignInThunk(data));\r\n\t\t\treturn true;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\tthunkAPI.dispatch(selectError(code));\r\n\t\t\treturn thunkAPI.rejectWithValue({\r\n\t\t\t\tcode,\r\n\t\t\t\tmessage,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const emailSignInThunk = createAsyncThunk(\r\n\t'redux-racstagram/auth/emailSignInThunk',\r\n\tasync (data, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst { email, password, displayName } = data;\r\n\t\t\tawait authService.signInWithEmailAndPassword(email, password);\r\n\t\t\tif (displayName) {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tusers: { userMaxCount },\r\n\t\t\t\t} = thunkAPI.getState();\r\n\t\t\t\tawait thunkAPI.dispatch(getUserMaxCountThunk());\r\n\t\t\t\tawait thunkAPI.dispatch(\r\n\t\t\t\t\tsetCurrentUserInfoThunk({\r\n\t\t\t\t\t\tdisplayName,\r\n\t\t\t\t\t\tuserPhotoUrl: DEFAULT_USER_IMAGE,\r\n\t\t\t\t\t\tcount: userMaxCount === -1 ? 1 : userMaxCount + 1,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t\tawait thunkAPI.dispatch(getCurrentUserInfoThunk());\r\n\t\t\t\tthunkAPI.dispatch(getRandomUserInfoThunk());\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\tthunkAPI.dispatch(selectError(code));\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const socialSignInThunk = createAsyncThunk(\r\n\t'redux-racstagram/auth/SocialSignInThunk',\r\n\tasync (name, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tawait authService.setPersistence(\r\n\t\t\t\tfirebaseInstance.auth.Auth.Persistence.SESSION\r\n\t\t\t);\r\n\t\t\tlet provider;\r\n\t\t\tif (name === 'google') {\r\n\t\t\t\tprovider = new firebaseInstance.auth.GoogleAuthProvider();\r\n\t\t\t} else if (name === 'github') {\r\n\t\t\t\tprovider = new firebaseInstance.auth.GithubAuthProvider();\r\n\t\t\t}\r\n\t\t\tprovider.addScope('profile');\r\n\r\n\t\t\tconst DEFAULT_USER_DISPLAYNAME = uuidv4();\r\n\t\t\t// Popup 로그인\r\n\t\t\tconst {\r\n\t\t\t\tuser: { photoURL, displayName },\r\n\t\t\t} = await authService.signInWithPopup(provider);\r\n\r\n\t\t\tawait thunkAPI.dispatch(getCurrentUserInfoThunk());\r\n\t\t\tconst {\r\n\t\t\t\tusers: { currentUserInfo },\r\n\t\t\t} = await thunkAPI.getState();\r\n\r\n\t\t\t// 소셜 로그인을 통한 최초 로그인인 경우\r\n\t\t\tif (\r\n\t\t\t\t!(\r\n\t\t\t\t\tcurrentUserInfo.displayName &&\r\n\t\t\t\t\tcurrentUserInfo.userPhotoUrl &&\r\n\t\t\t\t\tcurrentUserInfo.count\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\tawait thunkAPI.dispatch(getUserMaxCountThunk());\r\n\t\t\t\tconst {\r\n\t\t\t\t\tusers: { userMaxCount },\r\n\t\t\t\t} = thunkAPI.getState();\r\n\t\t\t\tawait thunkAPI.dispatch(\r\n\t\t\t\t\tsetCurrentUserInfoThunk({\r\n\t\t\t\t\t\tuserPhotoUrl: photoURL || DEFAULT_USER_IMAGE,\r\n\t\t\t\t\t\tdisplayName: displayName || DEFAULT_USER_DISPLAYNAME,\r\n\t\t\t\t\t\tcount: userMaxCount === -1 ? 1 : userMaxCount + 1,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t\tawait thunkAPI.dispatch(getCurrentUserInfoThunk());\r\n\t\t\t\tthunkAPI.dispatch(getRandomUserInfoThunk());\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} catch ({ code, message }) {\r\n\t\t\tthunkAPI.dispatch(selectError(code));\r\n\t\t\treturn thunkAPI.rejectWithValue({ code, message });\r\n\t\t}\r\n\t}\r\n);\r\n\r\n// Slice\r\nconst auth = createSlice({\r\n\tname: 'redux-racstagram/auth',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tresetAuth: (state) => ({\r\n\t\t\t...initialState,\r\n\t\t}),\r\n\t\tselectError: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\terrorSelector: payload,\r\n\t\t}),\r\n\t},\r\n\textraReducers: {\r\n\t\t[emailSignInThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\temailSignIn: { ...state.emailSignIn, loading: true },\r\n\t\t}),\r\n\t\t[emailSignInThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\temailSignIn: {\r\n\t\t\t\t...state.emailSignIn,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisSignIn: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[emailSignInThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\temailSignIn: {\r\n\t\t\t\t...state.emailSignIn,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tsignInError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[socialSignInThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tsocialSignIn: { ...state.socialSignIn, loading: true },\r\n\t\t}),\r\n\t\t[socialSignInThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tsocialSignIn: {\r\n\t\t\t\t...state.socialSignIn,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisSignIn: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[socialSignInThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tsocialSignIn: {\r\n\t\t\t\t...state.socialSignIn,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tsignInError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[emailSignUpThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\temailSignUp: { ...state.emailSignUp, loading: true },\r\n\t\t}),\r\n\t\t[emailSignUpThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\temailSignUp: {\r\n\t\t\t\t...state.emailSignUp,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisSignUp: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[emailSignUpThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\temailSignUp: {\r\n\t\t\t\t...state.emailSignUp,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tsignUpError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[signOutThunk.pending]: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tsignOut: { ...state.signOut, loading: true },\r\n\t\t}),\r\n\t\t[signOutThunk.fulfilled]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tsignOut: {\r\n\t\t\t\t...state.signOut,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tisSignOut: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[signOutThunk.rejected]: (state, { payload }) => ({\r\n\t\t\t...state,\r\n\t\t\tsignOut: {\r\n\t\t\t\t...state.signOut,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tsignOutError: payload,\r\n\t\t\t},\r\n\t\t}),\r\n\t},\r\n});\r\n\r\nexport default auth.reducer;\r\n\r\n// actionCreator\r\nexport const { resetAuth, selectError, setNewAccount } = auth.actions;\r\n\r\n// Async\r\n","import { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport SocialSignIn from './SocialSignIn';\r\nimport { socialSignInThunk } from '../../redux/modules/auth';\r\n\r\nconst SocialSignInContainer = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst onSocialClick = useCallback(\r\n\t\t(event) => {\r\n\t\t\tconst {\r\n\t\t\t\ttarget: { name },\r\n\t\t\t} = event;\r\n\t\t\tdispatch(socialSignInThunk(name));\r\n\t\t},\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\treturn <SocialSignIn onSocialClick={onSocialClick} />;\r\n};\r\n\r\nexport default SocialSignInContainer;\r\n","import { useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n// material UI textField 색상 제어를 위한 객체 반환기\r\nconst useStyles = makeStyles({\r\n\tinput: {\r\n\t\t'& input + fieldset': {\r\n\t\t\tborderColor: (props) => props.color,\r\n\t\t},\r\n\t\t'& input:valid:focus + fieldset': {\r\n\t\t\tborderColor: (props) => props.color,\r\n\t\t},\r\n\t\t'& input:valid:hover + fieldset': {\r\n\t\t\tborderColor: (props) => props.color,\r\n\t\t},\r\n\t},\r\n\thelperText: {\r\n\t\tcolor: (props) => props.color,\r\n\t},\r\n});\r\n\r\n// 패스워드 validation 확인\r\nexport const checkPassword = (password) => {\r\n\tlet res = false;\r\n\r\n\tif (!password) {\r\n\t\tres = false;\r\n\t} else {\r\n\t\tconst check = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/.test(password);\r\n\t\tcheck ? (res = true) : (res = false);\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\n// Email validation 확인\r\nexport const checkEmail = (email) => {\r\n\tlet res = false;\r\n\r\n\tif (!email) {\r\n\t\tres = false;\r\n\t} else {\r\n\t\tconst check =\r\n\t\t\t/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/.test(\r\n\t\t\t\temail\r\n\t\t\t);\r\n\t\tcheck ? (res = true) : (res = false);\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\n//\r\nexport const useCheckWebsite = (website) => {\r\n\tlet color = '';\r\n\tlet message = '';\r\n\tlet code = '';\r\n\tconst res =\r\n\t\t/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/.test(\r\n\t\t\twebsite\r\n\t\t);\r\n\tif (!website) {\r\n\t\tcolor = 'rgba(0, 0, 0, 0.3)';\r\n\t\tmessage = '';\r\n\t\tcode = 'empty';\r\n\t} else {\r\n\t\tif (res) {\r\n\t\t\tcolor = 'green';\r\n\t\t\tmessage = 'URL 형식에 맞습니다.';\r\n\t\t\tcode = 'success';\r\n\t\t} else {\r\n\t\t\tcolor = 'red';\r\n\t\t\tmessage =\r\n\t\t\t\t'URL 형식에 맞지 않습니다. (http:// 또는 https://를 포함시켜주세요.)';\r\n\t\t\tcode = 'error';\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tinput: useStyles({ color }).input,\r\n\t\thelperText: useStyles({ color }).helperText,\r\n\t\thelperTextMessage: message,\r\n\t\tcode,\r\n\t};\r\n};\r\n\r\nexport const useCheckDisplayName = (prevDisplayName, displayName) => {\r\n\tconst exist = useSelector((state) => state.users.checkDisplayName.exist);\r\n\r\n\tlet code = '';\r\n\tlet color = '';\r\n\tlet message = '';\r\n\r\n\tif (prevDisplayName === displayName) {\r\n\t\tcode = 'default';\r\n\t} else {\r\n\t\tif (!displayName) {\r\n\t\t\tcode = 'empty';\r\n\t\t} else if (!exist[1] || displayName !== exist[1]) {\r\n\t\t\t//이름이 확인된 적이 없는 경우 또는 이전에 확인된 이름과 input이 같지 않은 경우\r\n\t\t\tcode = 'warning';\r\n\t\t} else {\r\n\t\t\t// 확인된 이름이 존재하는 경우\r\n\t\t\tif (exist[0]) {\r\n\t\t\t\tcode = 'error';\r\n\t\t\t} else {\r\n\t\t\t\t// 확인된 이름이 존재하지 않는 경우\r\n\t\t\t\tcode = 'success';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tswitch (code) {\r\n\t\tcase 'empty':\r\n\t\t\tcolor = 'orange';\r\n\t\t\tmessage = '이름을 입력해 주세요';\r\n\t\t\tbreak;\r\n\t\tcase 'warning':\r\n\t\t\tcolor = 'orange';\r\n\t\t\tmessage = '중복 확인이 필요합니다.';\r\n\t\t\tbreak;\r\n\t\tcase 'success':\r\n\t\t\tcolor = 'green';\r\n\t\t\tmessage = `${exist[1]}는 사용가능 합니다.`;\r\n\t\t\tbreak;\r\n\t\tcase 'error':\r\n\t\t\tcolor = 'red';\r\n\t\t\tmessage = `${exist[1]}는 이미 존재하는 이름입니다.`;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tcolor = 'rgba(0, 0, 0, 0.3)';\r\n\t\t\tmessage = ``;\r\n\t}\r\n\treturn {\r\n\t\tinput: useStyles({ color }).input,\r\n\t\thelperText: useStyles({ color }).helperText,\r\n\t\thelperTextMessage: message,\r\n\t\tcode,\r\n\t};\r\n};\r\n","import { Button, CircularProgress, TextField } from '@material-ui/core';\r\nimport './AuthForm.scss';\r\nimport {\r\n\tcheckEmail,\r\n\tcheckPassword,\r\n\tuseCheckDisplayName,\r\n} from '../../hooks/useChecks';\r\n\r\nconst AuthForm = ({\r\n\tonChange,\r\n\tinputs,\r\n\tonSubmit,\r\n\tnewAccount,\r\n\temailSignIn,\r\n\temailSignUp,\r\n\tsocialSignIn,\r\n}) => {\r\n\tconst { email, password, displayName } = inputs;\r\n\r\n\t// 이름 중복 검사에 따른 안내 color, message, code Ref 반환\r\n\tconst checkDisplayName = useCheckDisplayName(null, displayName);\r\n\r\n\t// submit button 비활성화가 필요한 경우 true 반환\r\n\tconst checkDisable = () => {\r\n\t\tif (newAccount) {\r\n\t\t\treturn !(\r\n\t\t\t\tcheckDisplayName.code === 'success' &&\r\n\t\t\t\tcheckEmail(email) &&\r\n\t\t\t\tcheckPassword(password)\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn !(checkEmail(email) && checkPassword(password));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={onSubmit} className=\"auth_form\">\r\n\t\t\t<TextField\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tname=\"email\"\r\n\t\t\t\ttype=\"email\"\r\n\t\t\t\tvalue={email}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tclassName=\"input\"\r\n\t\t\t\tlabel=\"Email\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tclassName=\"input\"\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tname=\"password\"\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tlabel=\"Password\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tvalue={password}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t/>\r\n\t\t\t{newAccount ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tclassName=\"displayName_input\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tname=\"displayName\"\r\n\t\t\t\t\t\tlabel=\"User Name\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvalue={displayName}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\thelperText={checkDisplayName.helperTextMessage}\r\n\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\tclassName: checkDisplayName.input,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\tclassName: checkDisplayName.helperText,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<></>\r\n\t\t\t)}\r\n\t\t\t{emailSignIn || emailSignUp || socialSignIn ? (\r\n\t\t\t\t<CircularProgress />\r\n\t\t\t) : (\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tclassName=\"auth_btn\"\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tdisableElevation\r\n\t\t\t\t\tdisabled={checkDisable()}\r\n\t\t\t\t>\r\n\t\t\t\t\t{newAccount ? '가입하기' : '로그인'}\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default AuthForm;\r\n","import { useCallback, useMemo } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AuthForm from './AuthForm';\r\nimport { emailSignInThunk, emailSignUpThunk } from '../../redux/modules/auth';\r\nimport { checkDisplayNameThunk } from '../../redux/modules/users';\r\nimport { useEffect } from 'react';\r\nimport { debounce } from 'lodash';\r\n\r\nconst AuthFormContainer = ({ newAccount }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\t// redux state (회원가입, 로그인 loading 상태 표시를 위함)\r\n\tconst { emailSignUp, emailSignIn, socialSignIn } = useSelector(\r\n\t\t(state) => state.auth\r\n\t);\r\n\r\n\t// state\r\n\tconst [inputs, setInputs] = useState({\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tdisplayName: '',\r\n\t});\r\n\r\n\t// 로그인 창 또는 회원 가입 창으로 변경시 (Account 변경) input 초기화\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tsetInputs({\r\n\t\t\t\temail: '',\r\n\t\t\t\tpassword: '',\r\n\t\t\t\tdisplayName: '',\r\n\t\t\t});\r\n\t\t};\r\n\t}, [newAccount]);\r\n\r\n\t// 유저 이름 중복 체크 요청 함수\r\n\tconst check = useCallback(\r\n\t\t(displayName) => {\r\n\t\t\tdispatch(checkDisplayNameThunk(displayName));\r\n\t\t},\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\tconst debounceCheck = useMemo(\r\n\t\t() =>\r\n\t\t\tdebounce((displayName) => {\r\n\t\t\t\tcheck(displayName);\r\n\t\t\t}, 500),\r\n\t\t[check]\r\n\t);\r\n\r\n\t// onChange event Handler (email, password, displayName)\r\n\tconst onChange = useCallback(\r\n\t\t(event) => {\r\n\t\t\tconst { name, value } = event.target;\r\n\t\t\tif (name === 'email') {\r\n\t\t\t\tsetInputs({\r\n\t\t\t\t\t...inputs,\r\n\t\t\t\t\temail: value,\r\n\t\t\t\t});\r\n\t\t\t} else if (name === 'password') {\r\n\t\t\t\tsetInputs({\r\n\t\t\t\t\t...inputs,\r\n\t\t\t\t\tpassword: value,\r\n\t\t\t\t});\r\n\t\t\t} else if (name === 'displayName') {\r\n\t\t\t\tsetInputs({\r\n\t\t\t\t\t...inputs,\r\n\t\t\t\t\tdisplayName: value,\r\n\t\t\t\t});\r\n\t\t\t\tdebounceCheck(value);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[inputs, debounceCheck]\r\n\t);\r\n\r\n\t// onSubmit event Handler\r\n\tconst onSubmit = useCallback(\r\n\t\t(event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tif (newAccount === false) {\r\n\t\t\t\tdispatch(emailSignInThunk(inputs));\r\n\t\t\t} else {\r\n\t\t\t\tdispatch(emailSignUpThunk(inputs));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[inputs, dispatch, newAccount]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<AuthForm\r\n\t\t\tonChange={onChange}\r\n\t\t\tinputs={inputs}\r\n\t\t\tonSubmit={onSubmit}\r\n\t\t\tnewAccount={newAccount}\r\n\t\t\temailSignIn={emailSignIn.loading}\r\n\t\t\temailSignUp={emailSignUp.loading}\r\n\t\t\tsocialSignIn={socialSignIn.loading}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default AuthFormContainer;\r\n","import ShowError from '../../components/common/ShowError';\r\nimport SocialSignInContainer from '../../components/SocialSignIn/SocialSignInContainer';\r\nimport AuthFormContainer from '../../components/AuthForm/AuthFormCotainer';\r\nimport { useDispatch } from 'react-redux';\r\nimport { resetAuth, selectError } from '../../redux/modules/auth';\r\nimport { useEffect } from 'react';\r\nimport './Auth.scss';\r\nimport { useState } from 'react';\r\n\r\nconst Auth = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [newAccount, setNewAccount] = useState(false);\r\n\r\n\tconst toggleAccount = () => {\r\n\t\tsetNewAccount(!newAccount);\r\n\t\tdispatch(selectError(''));\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tdispatch(resetAuth());\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<div className=\"auth\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<h2 className=\"title\">Racstagram</h2>\r\n\t\t\t\t<AuthFormContainer newAccount={newAccount} />\r\n\t\t\t\t<ShowError className=\"error\" />\r\n\t\t\t\t{newAccount ? <></> : <SocialSignInContainer />}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t{newAccount ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t계정이 있으신가요?\r\n\t\t\t\t\t\t<span className=\"mode\" onClick={toggleAccount}>\r\n\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t계정이 없으신가요?\r\n\t\t\t\t\t\t<span className=\"mode\" onClick={toggleAccount}>\r\n\t\t\t\t\t\t\t회원가입\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Auth;\r\n","import { Alert } from '@material-ui/lab';\r\nimport { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Confirm.scss';\r\n\r\n// 확인창 UI Component\r\nconst Confirm = ({ children, isOn, toggle, message }) => {\r\n\t// monut 되고 나서 document.querySelector 사용 가능하기 때문에 mount 되고 나서 createPortal 사용\r\n\tconst [hasMounted, setHasMounted] = useState(false);\r\n\tuseEffect(() => {\r\n\t\tsetHasMounted(true);\r\n\t}, []);\r\n\tif (!hasMounted) {\r\n\t\treturn <></>;\r\n\t}\r\n\r\n\tconst modal = document.querySelector('.modal_root');\r\n\r\n\treturn ReactDOM.createPortal(\r\n\t\tisOn ? (\r\n\t\t\t<div className=\"confirm\">\r\n\t\t\t\t<div className=\"confirm_background\" onClick={toggle}></div>\r\n\t\t\t\t<div className=\"confirm_container\">\r\n\t\t\t\t\t<Alert severity=\"warning\" className=\"message\">\r\n\t\t\t\t\t\t{message}\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t\t<div className=\"confirm_items\">{children}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<></>\r\n\t\t),\r\n\t\tmodal\r\n\t);\r\n};\r\n\r\nexport default Confirm;\r\n","import { useCallback } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteCommentThunk } from '../../redux/modules/comment';\r\nimport Confirm from '../common/Confirm';\r\nimport './Comment.scss';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nconst Comment = ({ commentObj, postId }) => {\r\n\t// commentObj prop\r\n\tconst { commentId, comment, userDisplayName, userPhotoUrl, userId } =\r\n\t\tcommentObj;\r\n\r\n\t// redux state\r\n\tconst currentUserId = useSelector((state) => state.profile.currentUser.uid);\r\n\tconst dispatch = useDispatch();\r\n\r\n\t// delete comment 확인 창 state 와 toggle 함수\r\n\tconst [confirmIsOn, setConfirmIsOn] = useState(false);\r\n\tconst confirmToggle = () => {\r\n\t\tsetConfirmIsOn(!confirmIsOn);\r\n\t};\r\n\r\n\t// delete 요청 함수 (redux에 요청)\r\n\tconst deleteComment = useCallback(() => {\r\n\t\tdispatch(deleteCommentThunk({ commentId, postId }));\r\n\t}, [dispatch, commentId, postId]);\r\n\r\n\treturn (\r\n\t\t<li className=\"comment_container\" key={commentId}>\r\n\t\t\t<img src={userPhotoUrl} alt=\"user_image\" className=\"user_image\" />\r\n\t\t\t<div className=\"comment_info\">\r\n\t\t\t\t<span className=\"comment\">\r\n\t\t\t\t\t<Link to={`/user/${userDisplayName}`} className=\"comment_user_name\">\r\n\t\t\t\t\t\t{userDisplayName}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t{comment}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t\t{currentUserId === userId && (\r\n\t\t\t\t<button onClick={confirmToggle} className=\"delete_comment_btn\">\r\n\t\t\t\t\t<DeleteForeverIcon className=\"icon\" />\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t\t<Confirm\r\n\t\t\t\tisOn={confirmIsOn}\r\n\t\t\t\ttoggle={confirmToggle}\r\n\t\t\t\tmessage={'정말 삭제하시겠습니까?'}\r\n\t\t\t>\r\n\t\t\t\t<button className=\"confirm_item\" onClick={deleteComment}>\r\n\t\t\t\t\t예\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"confirm_item\" onClick={confirmToggle}>\r\n\t\t\t\t\t아니오\r\n\t\t\t\t</button>\r\n\t\t\t</Confirm>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default Comment;\r\n","import { TextField } from '@material-ui/core';\r\nimport './CommentForm.scss';\r\n\r\nconst CommentForm = ({ onChange, comment, onSubmit }) => {\r\n\treturn (\r\n\t\t<form className=\"comment_form\" onSubmit={onSubmit}>\r\n\t\t\t<TextField\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tvalue={comment}\r\n\t\t\t\tlabel=\"댓글\"\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tclassName=\"comment_input\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t/>\r\n\t\t\t<button\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tclassName=\"comment_submit\"\r\n\t\t\t\tdisabled={comment ? false : true}\r\n\t\t\t>\r\n\t\t\t\t작성\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default CommentForm;\r\n","import { useCallback } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCommentThunk } from '../../redux/modules/comment';\r\nimport CommentForm from './CommentForm';\r\n\r\nconst CommentFormContainer = ({ postId }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\t// state (comment)\r\n\tconst [comment, setComment] = useState('');\r\n\r\n\t// comment onChange Event Heandler\r\n\tconst onChange = useCallback((event) => {\r\n\t\tconst {\r\n\t\t\ttarget: { value },\r\n\t\t} = event;\r\n\t\tsetComment(value);\r\n\t}, []);\r\n\r\n\t// comment onSubmit Event Heandler\r\n\tconst onSubmit = useCallback(\r\n\t\t(event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tdispatch(setCommentThunk({ postId, comment }));\r\n\t\t\tsetComment('');\r\n\t\t},\r\n\t\t[dispatch, postId, comment]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<CommentForm onChange={onChange} comment={comment} onSubmit={onSubmit} />\r\n\t);\r\n};\r\n\r\nexport default CommentFormContainer;\r\n","import { useState } from 'react';\r\nimport Confirm from '../common/Confirm';\r\n\r\nconst SignOut = ({ onSignOutClick }) => {\r\n\tconst [isOn, setIsOn] = useState(false);\r\n\tconst toggle = () => {\r\n\t\tsetIsOn(!isOn);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<span className=\"profile_btn\" onClick={toggle}>\r\n\t\t\t\t로그아웃\r\n\t\t\t</span>\r\n\t\t\t<Confirm\r\n\t\t\t\tisOn={isOn}\r\n\t\t\t\ttoggle={toggle}\r\n\t\t\t\tmessage=\"정말로 로그아웃 하시겠습니까?\"\r\n\t\t\t>\r\n\t\t\t\t<button className=\"confirm_item\" onClick={onSignOutClick}>\r\n\t\t\t\t\t예\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"confirm_item\" onClick={toggle}>\r\n\t\t\t\t\t아니오\r\n\t\t\t\t</button>\r\n\t\t\t</Confirm>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SignOut;\r\n","import { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport SignOut from './SignOut';\r\nimport { signOutThunk } from '../../redux/modules/auth';\r\n\r\nconst SignOutContainer = () => {\r\n\tconst history = useHistory();\r\n\tconst dispatch = useDispatch();\r\n\tconst onSignOutClick = useCallback(async () => {\r\n\t\tawait dispatch(signOutThunk());\r\n\t\thistory.push('/');\r\n\t}, [history, dispatch]);\r\n\treturn <SignOut onSignOutClick={onSignOutClick} />;\r\n};\r\n\r\nexport default SignOutContainer;\r\n","import './Menu.scss';\r\n\r\n// menu 창 UI Component\r\nconst Menu = ({ children, toggle, isOn, location }) => {\r\n\treturn isOn ? (\r\n\t\t<div className=\"menu\">\r\n\t\t\t<div className=\"menu_background\" onClick={toggle}></div>\r\n\t\t\t<div className={`menu_container ${location}`}>{children}</div>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<></>\r\n\t);\r\n};\r\n\r\nexport default Menu;\r\n\r\n/* \r\nchildren : 항목 역할로 className으로 menu_item을 가지는 요소들\r\nisOn : Menu를 보여줄지 말지 결정해주는 true 또는 false를 가지는 값 \r\ntoggle : isOn의 true 또는 false 값을 변경시키는 함수\r\nlocation : menu_container 클래스 이름을 가지는 요소에 추가하는 \r\ncontainer 위치 top, left, right, bottom 기준을 가지는 className을 넣어줌\r\n*/\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport './Navigation.scss';\r\nimport SignOutContainer from '../SignOut/SignOutContainer';\r\nimport Menu from './Menu';\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\r\nimport { AccountCircleOutlined, LockOutlined } from '@material-ui/icons';\r\nimport { getAllPostsThunk, setPrevScrollY } from '../../redux/modules/post';\r\nimport { getRandomUserInfoThunk } from '../../redux/modules/users';\r\nimport { useCallback } from 'react';\r\n\r\nconst Navigation = () => {\r\n\tconst { pathname } = useLocation();\r\n\tconst dispatch = useDispatch();\r\n\r\n\t// menu 창 상태 및 menu toggle\r\n\tconst [isOn, setisOn] = useState(false);\r\n\tconst toggle = (event) => {\r\n\t\tsetisOn(!isOn);\r\n\t};\r\n\r\n\t// redux state\r\n\tconst { userPhotoUrl, displayName } = useSelector(\r\n\t\t(state) => state.users.currentUserInfo\r\n\t);\r\n\r\n\t// racstagram 로고 클릭시 home으로 이동 후 새롭게 글을 update (스크롤 0으로 이동)\r\n\tconst refresh = useCallback(async () => {\r\n\t\tdispatch(getAllPostsThunk());\r\n\t\tdispatch(getRandomUserInfoThunk());\r\n\t\tawait dispatch(setPrevScrollY(0));\r\n\t\twindow.scrollTo(0, 0);\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"nav\">\r\n\t\t\t\t<div className=\"nav_inner\">\r\n\t\t\t\t\t<div className=\"logo\">\r\n\t\t\t\t\t\t<Link to=\"/\" onClick={refresh}>\r\n\t\t\t\t\t\t\tRacstagram\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ul className=\"items\">\r\n\t\t\t\t\t\t<li className=\"item\">\r\n\t\t\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t\t\t{pathname === '/' ? (\r\n\t\t\t\t\t\t\t\t\t<HomeIcon className=\"icon_home\" />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<HomeOutlinedIcon className=\"icon_home\" />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"item\">\r\n\t\t\t\t\t\t\t<Link to=\"/write\">\r\n\t\t\t\t\t\t\t\t{pathname === '/write' ? (\r\n\t\t\t\t\t\t\t\t\t<AddBoxIcon className=\"icon_write\" />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<AddBoxOutlinedIcon className=\"icon_write\" />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"item\">\r\n\t\t\t\t\t\t\t{userPhotoUrl && (\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={userPhotoUrl}\r\n\t\t\t\t\t\t\t\t\tonClick={toggle}\r\n\t\t\t\t\t\t\t\t\talt=\"user_image\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"nav_profile_image\"\r\n\t\t\t\t\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t\t\t\t\tpathname === `/user/${displayName}` || isOn\r\n\t\t\t\t\t\t\t\t\t\t\t? { border: '' }\r\n\t\t\t\t\t\t\t\t\t\t\t: { border: 'none' }\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Menu toggle={toggle} isOn={isOn} location={'nav_menu_location'}>\r\n\t\t\t\t\t\t\t\t<Link to={`/user/${displayName}`} className=\"menu_item\">\r\n\t\t\t\t\t\t\t\t\t<AccountCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t프로필\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t<div className=\"menu_item\">\r\n\t\t\t\t\t\t\t\t\t<LockOutlined />\r\n\t\t\t\t\t\t\t\t\t<SignOutContainer />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"menu_item\" onClick={toggle}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"last_item_text\">나가기</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default React.memo(Navigation);\r\n","import { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport './Side.scss';\r\nimport React from 'react';\r\n\r\n// Footer와 유저 추천 Component (화면 side 영역에 표시)\r\nconst Side = () => {\r\n\t// redux state\r\n\tconst randomUsers = useSelector((state) => state.users.randomUserInfo);\r\n\r\n\treturn (\r\n\t\t<div className=\"side\">\r\n\t\t\t<div className=\"recommend\">회원님을 위한 추천</div>\r\n\t\t\t{randomUsers &&\r\n\t\t\t\trandomUsers.map((user, i) => (\r\n\t\t\t\t\t<div className=\"user\" key={i.toString()}>\r\n\t\t\t\t\t\t<div className=\"user_info\">\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"user_image\"\r\n\t\t\t\t\t\t\t\tsrc={user.userPhotoUrl}\r\n\t\t\t\t\t\t\t\talt=\"random_user_image\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className=\"user_name\">{user.displayName}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Link to={`/user/${user.displayName}`} className=\"visit\">\r\n\t\t\t\t\t\t\t보기\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t<div className=\"footer\">\r\n\t\t\t\t<div className=\"copy\">\r\n\t\t\t\t\t© {new Date().getFullYear()} RACSTAGRAM FROM TAEYOUNG (RACCOONCODE)\r\n\t\t\t\t</div>\r\n\t\t\t\t<a className=\"link\" href=\"https://goforit.tistory.com/\">\r\n\t\t\t\t\tBlog\r\n\t\t\t\t</a>\r\n\t\t\t\t<a className=\"link\" href=\"https://github.com/RaccoonCode96\">\r\n\t\t\t\t\tGithub\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default React.memo(Side);\r\n","import { useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Comment from '../../components/Comment/Comment';\r\nimport CommentFormContainer from '../../components/CommentForm/CommentFormContainer';\r\nimport Navigation from '../../components/common/Navigation';\r\nimport Side from '../../components/common/Side';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Comments = () => {\r\n\tconst {\r\n\t\tstate: { post },\r\n\t} = useLocation();\r\n\tconst comments = useSelector((state) => state.comment.comments);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navigation />\r\n\t\t\t<div className=\"page\">\r\n\t\t\t\t<div className=\"inner\">\r\n\t\t\t\t\t<main className=\"main comments_main\">\r\n\t\t\t\t\t\t<ul className=\"comments\">\r\n\t\t\t\t\t\t\t<li className=\"post_text_container\">\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tclassName=\"post_user_image\"\r\n\t\t\t\t\t\t\t\t\tsrc={post.userPhotoUrl}\r\n\t\t\t\t\t\t\t\t\talt=\"postUser_image\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<div className=\"post_info\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"post_text\">\r\n\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\tto={`/user/${post.userDisplayName}`}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"user_name\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{post.userDisplayName}\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t{post.postText}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t{comments.map((commentObj) => (\r\n\t\t\t\t\t\t\t\t<Comment\r\n\t\t\t\t\t\t\t\t\tpostId={post.postId}\r\n\t\t\t\t\t\t\t\t\tcommentObj={commentObj}\r\n\t\t\t\t\t\t\t\t\tkey={commentObj.commentId}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<CommentFormContainer postId={post.postId} />\r\n\t\t\t\t\t</main>\r\n\t\t\t\t\t<Side />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"modal_root\"></div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Comments;\r\n","import { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Modal.scss';\r\n\r\nconst Modal = ({ children, toggle, isOn, rowNum }) => {\r\n\tconst [hasMounted, setHasMounted] = useState(false);\r\n\tconst set = { transform: `translate(-200px ,${-(48 * rowNum) / 2}px)` };\r\n\tuseEffect(() => {\r\n\t\tsetHasMounted(true);\r\n\t}, []);\r\n\tif (!hasMounted) {\r\n\t\treturn <></>;\r\n\t}\r\n\r\n\t// mount 이후에 querySelector를 사용할 수 있음 (그 전에는 진짜로 만들어 지지 않았기 때문)\r\n\tconst modal = document.querySelector('.modal_root');\r\n\treturn ReactDOM.createPortal(\r\n\t\tisOn ? (\r\n\t\t\t<div className=\"modal\">\r\n\t\t\t\t<div className=\"modal_background\" onClick={toggle}></div>\r\n\t\t\t\t<div className=\"modal_container\" style={set}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<></>\r\n\t\t),\r\n\t\tmodal\r\n\t);\r\n};\r\n\r\nexport default Modal;\r\n\r\n/* \r\nModal 컴포넌트로 표현할 컴포넌트를 감싸서 children으로 대입\r\nisOn에 보일지 안보일지의 값을 전달해서 제어 함\r\nchildren은 item 클래스 이름으로 항목을 설정\r\n*/\r\n","import { faComment, faHeart } from '@fortawesome/free-regular-svg-icons';\r\nimport { faHeart as farHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './PostControl.scss';\r\n\r\nconst PostControl = ({ postId, toComments, isLike, onChange }) => {\r\n\treturn (\r\n\t\t<div className=\"post_control_container\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\tid={`input/${postId}`}\r\n\t\t\t\tchecked={isLike}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tclassName=\"like_input\"\r\n\t\t\t/>\r\n\t\t\t<label htmlFor={`input/${postId}`} className=\"post_control_btn\">\r\n\t\t\t\t{isLike ? (\r\n\t\t\t\t\t<FontAwesomeIcon icon={farHeart} className=\"icon onlike\" />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<FontAwesomeIcon icon={faHeart} className=\"icon\" />\r\n\t\t\t\t)}\r\n\t\t\t</label>\r\n\t\t\t<button className=\"post_control_btn\" onClick={toComments}>\r\n\t\t\t\t<FontAwesomeIcon icon={faComment} className=\"icon\" />\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PostControl;\r\n","import { debounce } from 'lodash';\r\nimport { useMemo, useState } from 'react';\r\nimport { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { getCommentsThunk } from '../../redux/modules/comment';\r\nimport { setLikeOffThunk, setLikeOnThunk } from '../../redux/modules/like';\r\nimport PostControl from './PostControl';\r\n\r\nconst PostControlContainer = ({ post }) => {\r\n\tconst history = useHistory();\r\n\tconst dispatch = useDispatch();\r\n\tconst { pathname } = useLocation();\r\n\tconst type = useMemo(\r\n\t\t() => (pathname === '/' ? 'allLikes' : 'userLikes'),\r\n\t\t[pathname]\r\n\t);\r\n\tconst likes = useSelector((state) => state.like[type]);\r\n\r\n\tconst findLike = useCallback(() => {\r\n\t\treturn likes.find((like) => like.postId === post.postId)?.isLike;\r\n\t}, [likes, post]);\r\n\r\n\tconst initIsLike = useMemo(() => findLike(), [findLike]);\r\n\tconst [isLike, setLike] = useState(initIsLike);\r\n\r\n\tconst toggleDebounce = useMemo(\r\n\t\t() =>\r\n\t\t\tdebounce((checked) => {\r\n\t\t\t\tif (initIsLike !== checked) {\r\n\t\t\t\t\tif (checked) {\r\n\t\t\t\t\t\tdispatch(setLikeOnThunk({ postId: post.postId, type }));\r\n\t\t\t\t\t\t// console.log('setLike : On');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdispatch(setLikeOffThunk({ postId: post.postId, type }));\r\n\t\t\t\t\t\t// console.log('setLike : Off');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, 900),\r\n\t\t[initIsLike, dispatch, post, type]\r\n\t);\r\n\r\n\tconst onChange = useCallback(\r\n\t\t(event) => {\r\n\t\t\tconst {\r\n\t\t\t\ttarget: { checked },\r\n\t\t\t} = event;\r\n\t\t\tsetLike(checked);\r\n\t\t\ttoggleDebounce(checked);\r\n\t\t},\r\n\t\t[toggleDebounce]\r\n\t);\r\n\r\n\tconst toComments = useCallback(async () => {\r\n\t\tawait dispatch(getCommentsThunk(post.postId));\r\n\t\thistory.push({ pathname: `/${post.postId}/comments`, state: { post } });\r\n\t}, [dispatch, history, post]);\r\n\r\n\treturn (\r\n\t\t<PostControl\r\n\t\t\tpostId={post.postId}\r\n\t\t\ttoComments={toComments}\r\n\t\t\tisLike={isLike}\r\n\t\t\tonChange={onChange}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default PostControlContainer;\r\n","import { Link } from 'react-router-dom';\r\nimport './PostComment.scss';\r\n\r\nconst PostComment = ({ commentEl }) => {\r\n\tconst { commentDisplayName, comment } = commentEl;\r\n\treturn (\r\n\t\t<div className=\"post_comment_container\">\r\n\t\t\t<span className=\"comment_text\">\r\n\t\t\t\t<Link className=\"user_name\" to={`/user/${commentDisplayName}`}>\r\n\t\t\t\t\t{commentDisplayName}\r\n\t\t\t\t</Link>\r\n\t\t\t\t{comment}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PostComment;\r\n","import { faEllipsisH } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useCallback, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Confirm from '../common/Confirm';\r\nimport Modal from '../common/Modal';\r\nimport './Post.scss';\r\nimport React from 'react';\r\nimport PostControlContainer from '../PostControl/PostControlContainer';\r\nimport PostComment from '../PostComment/PostComment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCommentsThunk } from '../../redux/modules/comment';\r\n\r\nconst Post = ({ post, deletePost, updatePost }) => {\r\n\tconst history = useHistory();\r\n\tconst dispatch = useDispatch();\r\n\tconst currentUserId = useSelector((state) => state.profile.currentUser.uid);\r\n\r\n\t// Post 메뉴 ON & OFF\r\n\tconst [isOn, setIsOn] = useState(false);\r\n\tconst toggle = () => {\r\n\t\tsetIsOn(!isOn);\r\n\t};\r\n\r\n\t// Post 메뉴의 삭제 확인\r\n\tconst [confirmIsOn, setConfirmIsOn] = useState(false);\r\n\tconst confirmToggle = () => {\r\n\t\tsetConfirmIsOn(!confirmIsOn);\r\n\t};\r\n\r\n\t// comments 보기 이동\r\n\tconst toComments = useCallback(async () => {\r\n\t\tawait dispatch(getCommentsThunk(post.postId));\r\n\t\thistory.push({ pathname: `/${post.postId}/comments`, state: { post } });\r\n\t}, [dispatch, post, history]);\r\n\r\n\t// Post 글 축약 및 더보기\r\n\tconst shortText = post.postText.slice(0, 35).split(/(\\r\\n|\\n|\\r)/gm)[0];\r\n\tconst moreBtnCheck = () => {\r\n\t\t// 35자 넘거나, 개행이 있는 경우 더보기 버튼 표시\r\n\t\treturn post.postText > 35 || /(\\r\\n|\\n|\\r)/gm.test(post.postText);\r\n\t};\r\n\tconst [isMore, setMore] = useState(false);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"post\">\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"writer\">\r\n\t\t\t\t\t\t<Link to={`/user/${post.userDisplayName}`} className=\"user_info\">\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\talt=\"user_img\"\r\n\t\t\t\t\t\t\t\tclassName=\"user_img\"\r\n\t\t\t\t\t\t\t\tsrc={post.userPhotoUrl}\r\n\t\t\t\t\t\t\t\twidth=\"32px\"\r\n\t\t\t\t\t\t\t\theight=\"32px\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<h4 className=\"user_name\">{post.userDisplayName}</h4>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<button className=\"post_menu\" onClick={toggle}>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faEllipsisH} size=\"1x\" />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"post_img_container\">\r\n\t\t\t\t\t\t{post.postImageUrl && (\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"post_img\"\r\n\t\t\t\t\t\t\t\tsrc={post.postImageUrl}\r\n\t\t\t\t\t\t\t\talt=\"rweet img\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<PostControlContainer post={post} />\r\n\t\t\t\t\t<div className=\"post_content_container\">\r\n\t\t\t\t\t\t<div className=\"post_text_container\">\r\n\t\t\t\t\t\t\t<span className=\"post_text\">\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tto={`/user/${post.userDisplayName}`}\r\n\t\t\t\t\t\t\t\t\tclassName=\"user_name\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{post.userDisplayName}\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t{isMore ? post.postText : shortText}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t{moreBtnCheck() && !isMore && (\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName=\"more_text_btn\"\r\n\t\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\tsetMore(true);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t...더 보기\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"post_comments\">\r\n\t\t\t\t\t\t\t{post.commentArray[0] && (\r\n\t\t\t\t\t\t\t\t<button className=\"comments_count\" onClick={toComments}>\r\n\t\t\t\t\t\t\t\t\t댓글 {post.commentArray[0].count}개 모두 보기\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{post.commentArray.map((commentEl) => (\r\n\t\t\t\t\t\t\t\t<PostComment commentEl={commentEl} key={commentEl.commentId} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t</div>\r\n\t\t\t<Modal isOn={isOn} toggle={toggle} rowNum={3}>\r\n\t\t\t\t{currentUserId === post.userId ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<button className=\"item\" onClick={confirmToggle}>\r\n\t\t\t\t\t\t\t삭제하기\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<Confirm\r\n\t\t\t\t\t\t\tisOn={confirmIsOn}\r\n\t\t\t\t\t\t\ttoggle={confirmToggle}\r\n\t\t\t\t\t\t\tmessage={'정말 삭제하시겠습니까?'}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"confirm_item\"\r\n\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\tdeletePost(post);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t예\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button className=\"confirm_item\" onClick={confirmToggle}>\r\n\t\t\t\t\t\t\t\t아니오\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Confirm>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"item\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tupdatePost(post);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t수정하기\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<></>\r\n\t\t\t\t)}\r\n\t\t\t\t<button className=\"item\" onClick={toggle}>\r\n\t\t\t\t\t취 소\r\n\t\t\t\t</button>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default React.memo(Post);\r\n","import { debounce } from 'lodash';\r\nimport React, { useRef, useEffect, useMemo } from 'react';\r\n\r\nconst UseInfiniteScroll = ({ execute }) => {\r\n\tconst debounceExecute = useMemo(() => debounce(execute, 300), [execute]);\r\n\r\n\t// Target\r\n\tconst lastElRef = useRef(null);\r\n\r\n\t// observer 식별자 (useEffect에서 사용되기 때문에 useRef로 변수 관리 함)\r\n\tconst observer = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\t// 과거 Observer 존재 확인 후 제거\r\n\t\tif (observer.current) {\r\n\t\t\tobserver.current.disconnect();\r\n\t\t\t/*\r\n      최초에 만들어지고, 나서 disconnect 하지 않고 새로 지정한다고 해도\r\n      가비지 컬렉터가 그전에 있던것을 지우지 않음 \r\n      (execute 함수가 계속해서 변하는 것을 반영하기 위해 제거하고 새로 다시 지정하는 로직으로 구현 함)\r\n      */\r\n\t\t}\r\n\r\n\t\t// Observer 생성\r\n\t\tobserver.current = new IntersectionObserver(\r\n\t\t\t([{ isIntersecting }]) => {\r\n\t\t\t\tif (isIntersecting) {\r\n\t\t\t\t\tdebounceExecute();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{ threshold: 0.5 }\r\n\t\t);\r\n\r\n\t\t// Observer On\r\n\t\tobserver.current.observe(lastElRef.current);\r\n\t}, [debounceExecute]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Observer Off\r\n\t\treturn () => {\r\n\t\t\tobserver.current.disconnect();\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn <div ref={lastElRef} style={{ height: '20px' }}></div>;\r\n};\r\n\r\nexport default UseInfiniteScroll;\r\n","import { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { resetGetMorePosts, resetUserPosts } from '../../redux/modules/post';\r\nimport Post from './Post';\r\nimport UseInfiniteScroll from '../common/UseInfiniteScroll';\r\nimport { resetGetMoreLikes, resetUserLikes } from '../../redux/modules/like';\r\nimport { resetUserInfo } from '../../redux/modules/users';\r\n\r\nconst PostContainer = ({ posts, isGet, deletePost, getMorePosts }) => {\r\n\tconst history = useHistory();\r\n\tconst dispatch = useDispatch();\r\n\r\n\t// state\r\n\tconst { isNone } = useSelector((state) => state.post.getMorePosts);\r\n\r\n\t// 해당 글 수정 페이지 이동 함수\r\n\tconst updatePost = useCallback(\r\n\t\t(post) => {\r\n\t\t\thistory.push({\r\n\t\t\t\tpathname: '/update/post',\r\n\t\t\t\tstate: { post, profileInfo: {} },\r\n\t\t\t});\r\n\t\t},\r\n\t\t[history]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\t// dispatch(getAllLikesThunk());\r\n\t\treturn () => {\r\n\t\t\tdispatch(resetUserInfo());\r\n\t\t\tdispatch(resetUserPosts());\r\n\t\t\tdispatch(resetUserLikes());\r\n\t\t\tdispatch(resetGetMorePosts());\r\n\t\t\tdispatch(resetGetMoreLikes());\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{posts.map((post) => (\r\n\t\t\t\t<Post\r\n\t\t\t\t\tpost={post}\r\n\t\t\t\t\tkey={post.postId}\r\n\t\t\t\t\tupdatePost={updatePost}\r\n\t\t\t\t\tdeletePost={deletePost}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t\t{!isNone && isGet && <UseInfiniteScroll execute={getMorePosts} />}\r\n\t\t\t{isNone && '더 이상 글이 없습니다.'}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default PostContainer;\r\n","import { useLayoutEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setPrevScrollY } from '../redux/modules/post';\r\n\r\nconst useScroll = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst prevScrollY = useSelector((state) => state.post.prevScrollY);\r\n\tuseLayoutEffect(() => {\r\n\t\tif (prevScrollY) {\r\n\t\t\twindow.scrollTo(0, prevScrollY);\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tdispatch(setPrevScrollY(window.scrollY));\r\n\t\t};\r\n\t}, [dispatch, prevScrollY]);\r\n};\r\n\r\nexport default useScroll;\r\n","import { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Navigation from '../../components/common/Navigation';\r\nimport Side from '../../components/common/Side';\r\nimport PostContainer from '../../components/Post/PostContainer';\r\nimport useScroll from '../../hooks/useScroll';\r\nimport {\r\n\tdeletePostThunk,\r\n\tgetAllPostsThunk,\r\n\tgetMorePostsThunk,\r\n} from '../../redux/modules/post';\r\n\r\nconst Home = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\t// 처음에 가져오는 글 6개 (무한스크롤 진입점)\r\n\tconst allPosts = useSelector((state) => state.post.allPosts);\r\n\r\n\t// 최초에 게시글 가져왔는지 감지 (이후에 getMorePost 수행하기 위함)\r\n\tconst isGetAllPosts = useSelector((state) => state.post.getAllPosts.isGet);\r\n\r\n\t// Set prev scroll Y\r\n\tuseScroll();\r\n\r\n\t// Delete\r\n\tconst deletePost = useCallback(\r\n\t\t(post) => {\r\n\t\t\tdispatch(deletePostThunk(post));\r\n\t\t\tdispatch(getAllPostsThunk());\r\n\t\t},\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\t// GetMorePosts\r\n\tconst getMorePosts = useCallback(() => {\r\n\t\tconst postDate = allPosts[allPosts.length - 1]?.postDate;\r\n\t\tdispatch(getMorePostsThunk({ postDate, type: 'allPosts' }));\r\n\t}, [dispatch, allPosts]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navigation />\r\n\t\t\t<div className=\"page\">\r\n\t\t\t\t<div className=\"inner\">\r\n\t\t\t\t\t<div className=\"main\">\r\n\t\t\t\t\t\t<PostContainer\r\n\t\t\t\t\t\t\tposts={allPosts}\r\n\t\t\t\t\t\t\tisGet={isGetAllPosts}\r\n\t\t\t\t\t\t\tdeletePost={deletePost}\r\n\t\t\t\t\t\t\tgetMorePosts={getMorePosts}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Side />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"modal_root\"></div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import { useCallback, useLayoutEffect } from 'react';\r\nimport { useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport Navigation from '../../components/common/Navigation';\r\nimport Side from '../../components/common/Side';\r\nimport PostContainer from '../../components/Post/PostContainer';\r\nimport {\r\n\tdeletePostThunk,\r\n\tgetMorePostsThunk,\r\n\tgetUserPostsThunk,\r\n} from '../../redux/modules/post';\r\n\r\nconst Posts = () => {\r\n\tconst {\r\n\t\tstate: { postNum },\r\n\t} = useLocation();\r\n\r\n\tconst targetRef = useRef();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst { userName } = useParams();\r\n\tconst { userPosts } = useSelector((state) => state.post);\r\n\tconst isGetUserPosts = useSelector((state) => state.post.getUserPosts.isGet);\r\n\r\n\tconst scrollToPost = (num) => {\r\n\t\tif (!num) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst top = targetRef.current.children[num].offsetTop;\r\n\t\t// window.scrollBy({\r\n\t\t// \ttop: top - 54,\r\n\t\t// \tleft: 0,\r\n\t\t// \tbehavior: 'smooth',\r\n\t\t// });\r\n\t\twindow.scrollTo(0, top - 54);\r\n\t};\r\n\r\n\tconst deletePost = useCallback(\r\n\t\t(post) => {\r\n\t\t\tdispatch(deletePostThunk(post));\r\n\t\t\tdispatch(getUserPostsThunk(userName));\r\n\t\t},\r\n\t\t[dispatch, userName]\r\n\t);\r\n\r\n\tconst getMorePosts = useCallback(() => {\r\n\t\tconst postDate = userPosts[userPosts.length - 1]?.postDate;\r\n\t\tdispatch(\r\n\t\t\tgetMorePostsThunk({\r\n\t\t\t\tpostDate,\r\n\t\t\t\ttype: 'userPosts',\r\n\t\t\t\tuserName,\r\n\t\t\t})\r\n\t\t);\r\n\t}, [dispatch, userPosts, userName]);\r\n\r\n\tuseLayoutEffect(() => {\r\n\t\tscrollToPost(postNum);\r\n\t}, [postNum, dispatch]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navigation />\r\n\t\t\t<div className=\"page\">\r\n\t\t\t\t<div className=\"inner\">\r\n\t\t\t\t\t<div className=\"main\" ref={targetRef}>\r\n\t\t\t\t\t\t<PostContainer\r\n\t\t\t\t\t\t\tposts={userPosts}\r\n\t\t\t\t\t\t\tisGet={isGetUserPosts}\r\n\t\t\t\t\t\t\tdeletePost={deletePost}\r\n\t\t\t\t\t\t\tgetMorePosts={getMorePosts}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Side />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"modal_root\"></div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Posts;\r\n","import { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { getMorePostsThunk, resetGetMorePosts } from '../../redux/modules/post';\r\nimport './ProfilePostImages.scss';\r\nimport UseInfiniteScroll from './UseInfiniteScroll';\r\n\r\nconst ProfilePostImages = ({ posts }) => {\r\n\t// props : posts -> 현재 유저 인지 특정 유저인지에 따라 들어오는 posts가 다름\r\n\tconst { userName } = useParams();\r\n\tconst history = useHistory();\r\n\tconst dispatch = useDispatch();\r\n\r\n\t// redux state\r\n\t// post 더 불러오기 상태\r\n\tconst { isNone } = useSelector((state) => state.post.getMorePosts);\r\n\r\n\t// 특정 유저 Posts 가져오기 성공 상태\r\n\tconst isGetUserPosts = useSelector((state) => state.post.getUserPosts.isGet);\r\n\r\n\t// 무한 스크롤시 더 가져오기 요청하는 함수 (현재 유저인지, 특정 유저인지 구분)\r\n\tconst getMorePosts = useCallback(() => {\r\n\t\tconst postDate = posts[posts.length - 1]?.postDate;\r\n\t\tdispatch(getMorePostsThunk({ postDate, type: 'userPosts', userName }));\r\n\t}, [dispatch, posts, userName]);\r\n\r\n\t// 유저의 작성글 이미지 클릭시 해당 글로 이동 요청(클릭한 요소가 몇번째 인지를 같이 보냄)\r\n\tconst toPosts = useCallback(\r\n\t\t(postNum) => {\r\n\t\t\thistory.push({\r\n\t\t\t\tpathname: `/user/${userName}/posts`,\r\n\t\t\t\tstate: { postNum },\r\n\t\t\t});\r\n\t\t},\r\n\t\t[history, userName]\r\n\t);\r\n\r\n\t// 들어온 posts를 imagesTable(3열)로 구성하기 위한 posts를 나누는 함수\r\n\tconst devidePosts = (posts) => {\r\n\t\tconst arr = [...posts];\r\n\t\tlet tmp = [];\r\n\t\tconst length = posts.length;\r\n\t\tfor (let i = 0; i <= length / 3; i++) {\r\n\t\t\ttmp = [...tmp, [...arr.splice(0, 3)]];\r\n\t\t}\r\n\t\treturn tmp;\r\n\t};\r\n\r\n\t/*\r\n\t// unmount 되기 전에 모두 reset \r\n  - getMorePosts의 isNone 상태 reset\r\n  - 과거 Posts 데이터 화면 표시 현상 제거를 위해 항상 unmount시 가져왔던 데이터는 reset 요청\r\n  */\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tdispatch(resetGetMorePosts());\r\n\t\t\t// dispatch(resetGetUserPosts());\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"post_table\">\r\n\t\t\t\t{devidePosts(posts).map((row, index) => (\r\n\t\t\t\t\t<div className=\"posts_row\" key={index.toString()}>\r\n\t\t\t\t\t\t{[0, 1, 2].map((i) =>\r\n\t\t\t\t\t\t\trow[i] ? (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName=\"post_image_container\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\ttoPosts(3 * index + i);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tkey={`postTable/${row[i].postId.toString()}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tsrc={row[i].postImageUrl}\r\n\t\t\t\t\t\t\t\t\t\talt={'postImageUrl'}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"post_image\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div className=\"none_image\" key={i.toString()}></div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t{!isNone && isGetUserPosts && (\r\n\t\t\t\t<UseInfiniteScroll execute={getMorePosts} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ProfilePostImages;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useWindowSize = () => {\r\n\tconst [windowSize, setWindowSize] = useState({\r\n\t\twidth: undefined,\r\n\t\theight: undefined,\r\n\t});\r\n\tuseEffect(() => {\r\n\t\tfunction handleResize() {\r\n\t\t\tsetWindowSize({\r\n\t\t\t\twidth: window.innerWidth,\r\n\t\t\t\theight: window.innerHeight,\r\n\t\t\t});\r\n\t\t}\r\n\t\twindow.addEventListener('resize', handleResize);\r\n\t\thandleResize();\r\n\t\treturn () => window.removeEventListener('resize', handleResize);\r\n\t}, []);\r\n\treturn windowSize;\r\n};\r\n\r\nexport default useWindowSize;\r\n","import { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport useWindowSize from '../../hooks/useWindowSize';\r\nimport './UserProfile.scss';\r\n\r\nconst UserProfile = ({ profileInfo, updateProfile, postCount }) => {\r\n\tconst { userName } = useParams();\r\n\tconst currentUserDisplayName = useSelector(\r\n\t\t(state) => state.users.currentUserInfo.displayName\r\n\t);\r\n\tconst { userPhotoUrl, displayName, userIntro, subDisplayName, website } =\r\n\t\tprofileInfo;\r\n\tconst { width } = useWindowSize();\r\n\tconst websiteMatch = (website) => {\r\n\t\tif (!website) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\tconst check = website.match(/\\/\\/([A-Za-z0-9.]+)\\/?([A-Za-z0-9]*)/);\r\n\t\tif (!check[2]) {\r\n\t\t\treturn check[1];\r\n\t\t} else {\r\n\t\t\treturn website.match(/\\/\\/([A-Za-z0-9.]+\\/[A-Za-z0-9]+)/)[1];\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"profile_container\">\r\n\t\t\t\t<div className=\"profile_image_container\">\r\n\t\t\t\t\t{userPhotoUrl && (\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={userPhotoUrl}\r\n\t\t\t\t\t\t\talt=\"userPhotoUrl\"\r\n\t\t\t\t\t\t\tclassName=\"profile_image\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"profile_info\">\r\n\t\t\t\t\t<div className=\"profile_info_top\">\r\n\t\t\t\t\t\t<div className=\"profile_name\">{displayName}</div>\r\n\t\t\t\t\t\t{userName === currentUserDisplayName && (\r\n\t\t\t\t\t\t\t<button className=\"profile_edit_btn\" onClick={updateProfile}>\r\n\t\t\t\t\t\t\t\t프로필 편집\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{width <= 753 ? (\r\n\t\t\t\t\t\t<></>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<div className=\"post_count\">\r\n\t\t\t\t\t\t\t\t게시물 <span className=\"count\">{postCount}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"profile_info_bottom\">\r\n\t\t\t\t\t\t\t\t<h1 className=\"sub_name\">{subDisplayName}</h1>\r\n\t\t\t\t\t\t\t\t<div className=\"profile_intro\">{userIntro}</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"profile_website\"\r\n\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\thref={website}\r\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{websiteMatch(website)}\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{width > 753 ? (\r\n\t\t\t\t<></>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"profile_info\">\r\n\t\t\t\t\t<div className=\"profile_info_bottom\">\r\n\t\t\t\t\t\t<h1 className=\"sub_name\">{subDisplayName}</h1>\r\n\t\t\t\t\t\t<div className=\"profile_intro\">{userIntro}</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\tclassName=\"profile_website\"\r\n\t\t\t\t\t\t\t\trel=\"noreferrer\"\r\n\t\t\t\t\t\t\t\thref={website}\r\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{websiteMatch(website)}\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"post_count_small\">\r\n\t\t\t\t\t\t게시물 <span className=\"count\">{postCount}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default UserProfile;\r\n","import { useLayoutEffect } from 'react';\r\nimport { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { getUserPostsThunk } from '../../redux/modules/post';\r\nimport { getUserInfoThunk } from '../../redux/modules/users';\r\nimport ProfilePostImages from '../common/ProfilePostImages';\r\nimport UserProfile from './UserProfile';\r\nimport './UserProfileContainer.scss';\r\n\r\nconst UserProfileContainer = () => {\r\n\tconst { userName } = useParams();\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\r\n\tconst userPosts = useSelector((state) => state.post.userPosts);\r\n\tconst userInfo = useSelector((state) => state.users.userInfo);\r\n\r\n\tconst getInfoPosts = useCallback(() => {\r\n\t\tdispatch(getUserInfoThunk(userName));\r\n\t\tdispatch(getUserPostsThunk(userName));\r\n\t}, [dispatch, userName]);\r\n\r\n\tconst updateProfile = useCallback(() => {\r\n\t\thistory.push({\r\n\t\t\tpathname: '/update/profile',\r\n\t\t\tstate: { profileInfo: userInfo, post: [] },\r\n\t\t});\r\n\t}, [history, userInfo]);\r\n\r\n\t// posts 가져오게 요청\r\n\tuseLayoutEffect(() => {\r\n\t\tgetInfoPosts();\r\n\t}, [getInfoPosts]);\r\n\r\n\treturn (\r\n\t\t<div className=\"user_profile_container\">\r\n\t\t\t<>\r\n\t\t\t\t<UserProfile\r\n\t\t\t\t\tprofileInfo={userInfo}\r\n\t\t\t\t\tupdateProfile={updateProfile}\r\n\t\t\t\t\tpostCount={userPosts?.length}\r\n\t\t\t\t/>\r\n\t\t\t\t<ProfilePostImages posts={userPosts} />\r\n\t\t\t</>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default UserProfileContainer;\r\n","import UserProfileContainer from '../../components/UserProfile/UserProfileContainer';\r\n\r\nimport Navigation from '../../components/common/Navigation';\r\nimport { useLayoutEffect } from 'react';\r\nconst Profile = () => {\r\n\tuseLayoutEffect(() => {\r\n\t\twindow.scrollTo(0, 0);\r\n\t}, []);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navigation />\r\n\t\t\t<div className=\"page\">\r\n\t\t\t\t<div className=\"inner\">\r\n\t\t\t\t\t<UserProfileContainer />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"modal_root\"></div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","const resize = (img, maxSize) => {\r\n\tlet canvas = document.createElement('canvas'),\r\n\t\tmax_size = maxSize,\r\n\t\twidth = img.width,\r\n\t\theight = img.height;\r\n\tif (width > height) {\r\n\t\tif (width > max_size) {\r\n\t\t\theight *= max_size / width;\r\n\t\t\twidth = max_size;\r\n\t\t}\r\n\t} else {\r\n\t\tif (height > max_size) {\r\n\t\t\twidth *= max_size / height;\r\n\t\t\theight = max_size;\r\n\t\t}\r\n\t}\r\n\tcanvas.width = width;\r\n\tcanvas.height = height;\r\n\tcanvas.getContext('2d').drawImage(img, 0, 0, width, height);\r\n\tconst dataUrl = canvas.toDataURL('image/jpeg');\r\n\treturn dataUrl;\r\n};\r\n\r\nexport default resize;\r\n","import { faCamera } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './PostForm.scss';\r\nimport React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Confirm from '../common/Confirm';\r\n\r\nconst PostForm = ({\r\n\tonChange,\r\n\tinputs,\r\n\tonSubmit,\r\n\tcurrentUserInfo,\r\n\tpostFormError,\r\n\terrorToggle,\r\n}) => {\r\n\tconst { text, imageBase64 } = inputs;\r\n\tconst { userPhotoUrl, displayName } = currentUserInfo;\r\n\tconst { pathname } = useLocation();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={onSubmit} className=\"post_form\">\r\n\t\t\t\t<div className=\"image_container\">\r\n\t\t\t\t\t{imageBase64 ? (\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={imageBase64}\r\n\t\t\t\t\t\t\talt=\"preview_image\"\r\n\t\t\t\t\t\t\tclassName=\"preview_image\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"none_image\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"file_input_post\">\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon className=\"icon_camera\" icon={faCamera} />\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tname=\"file\"\r\n\t\t\t\t\t\tid=\"file_input_post\"\r\n\t\t\t\t\t\taccept=\".jpg, .png\"\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text_container\">\r\n\t\t\t\t\t<div className=\"profile_image_container\">\r\n\t\t\t\t\t\t<div className=\"profile\">\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={userPhotoUrl}\r\n\t\t\t\t\t\t\t\talt=\"Creator_Profile\"\r\n\t\t\t\t\t\t\t\tclassName=\"user_image\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<span className=\"user_name\">{displayName}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<label htmlFor=\"file_input_post\" className=\"small_file_input_btn\">\r\n\t\t\t\t\t\t\t<FontAwesomeIcon className=\"icon_camera\" icon={faCamera} />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tname=\"text\"\r\n\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\tplaceholder=\"내용을 작성해 주세요.\"\r\n\t\t\t\t\t\twrap=\"hard\"\r\n\t\t\t\t\t\tmaxLength={120}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tclassName=\"text_input\"\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tvalue={pathname === '/write' ? '작성하기' : '수정하기'}\r\n\t\t\t\t\t\tclassName=\"btn_blue\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t\t<Confirm\r\n\t\t\t\tisOn={postFormError}\r\n\t\t\t\tmessage={postFormError}\r\n\t\t\t\ttoggle={errorToggle}\r\n\t\t\t>\r\n\t\t\t\t<button onClick={errorToggle} className=\"confirm_item\">\r\n\t\t\t\t\t확인\r\n\t\t\t\t</button>\r\n\t\t\t</Confirm>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default PostForm;\r\n","import { useCallback, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport resize from '../../hooks/resize';\r\nimport { getImageUrlThunk } from '../../redux/modules/image';\r\nimport { updatePostThunk } from '../../redux/modules/post';\r\nimport PostForm from '../PostForm/PostForm';\r\n\r\nconst PostUpdateContainer = ({ post }) => {\r\n\tconst history = useHistory();\r\n\tconst dispatch = useDispatch();\r\n\tconst currentUserInfo = useSelector((state) => state.users.currentUserInfo);\r\n\tconst { postImageUrl, postText, postId, userId } = post;\r\n\tconst [inputs, setInputs] = useState({\r\n\t\timageBase64: postImageUrl,\r\n\t\tprevImageUrl: postImageUrl,\r\n\t\tprevText: postText,\r\n\t\ttext: postText,\r\n\t\tpostId,\r\n\t\tuserId,\r\n\t\tpreventSubmit: false,\r\n\t});\r\n\tconst [postFormError, setPostFormError] = useState('');\r\n\tconst errorToggle = useCallback(() => {\r\n\t\tsetPostFormError(!postFormError);\r\n\t}, [postFormError]);\r\n\r\n\tconst onChange = useCallback(\r\n\t\t(event) => {\r\n\t\t\tconst { name, value, files } = event.target;\r\n\t\t\tif (name === 'file') {\r\n\t\t\t\tif (files[0]) {\r\n\t\t\t\t\tconst theFile = files[0];\r\n\t\t\t\t\tconst reader = new FileReader();\r\n\t\t\t\t\treader.onloadend = (finishedEvent) => {\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\tcurrentTarget: { result },\r\n\t\t\t\t\t\t} = finishedEvent;\r\n\t\t\t\t\t\tconst img = new Image();\r\n\t\t\t\t\t\timg.src = result;\r\n\t\t\t\t\t\timg.onload = (event) => {\r\n\t\t\t\t\t\t\tconst dataUrl = resize(img, 600);\r\n\t\t\t\t\t\t\tsetInputs({ ...inputs, imageBase64: dataUrl });\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\treader.readAsDataURL(theFile);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetInputs({ ...inputs, imageBase64: inputs.prevImageUrl });\r\n\t\t\t\t}\r\n\t\t\t} else if (name === 'text') {\r\n\t\t\t\tsetInputs({ ...inputs, text: value });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[inputs]\r\n\t);\r\n\r\n\tconst onSubmit = useCallback(\r\n\t\tasync (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tconst { preventSubmit, imageBase64, prevImageUrl, text, prevText } =\r\n\t\t\t\tinputs;\r\n\t\t\t// validation\r\n\t\t\tif (!text) {\r\n\t\t\t\tsetPostFormError('내용을 입력해 주세요.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// 변화가 없는 경우\r\n\t\t\tif (\r\n\t\t\t\tpreventSubmit === true ||\r\n\t\t\t\t(text === prevText && imageBase64 === prevImageUrl)\r\n\t\t\t) {\r\n\t\t\t\thistory.replace('/');\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\t// submit false 이고 이전 값과 같지 않으면\r\n\t\t\t\tsetInputs({ ...inputs, preventSubmit: true });\r\n\t\t\t\t// 이전과 같진 않지만, 값이 있는 경우\r\n\t\t\t\tif (imageBase64 !== prevImageUrl) {\r\n\t\t\t\t\tawait dispatch(getImageUrlThunk(imageBase64));\r\n\t\t\t\t}\r\n\t\t\t\tawait dispatch(updatePostThunk(inputs));\r\n\t\t\t\thistory.replace('/');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[dispatch, inputs, history]\r\n\t);\r\n\treturn (\r\n\t\t<PostForm\r\n\t\t\tonChange={onChange}\r\n\t\t\tinputs={inputs}\r\n\t\t\tonSubmit={onSubmit}\r\n\t\t\tcurrentUserInfo={currentUserInfo}\r\n\t\t\tpostFormError={postFormError}\r\n\t\t\terrorToggle={errorToggle}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default PostUpdateContainer;\r\n","import { faCamera } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { useCheckDisplayName, useCheckWebsite } from '../../hooks/useChecks';\r\n\r\nimport './ProfileUpdate.scss';\r\n\r\nconst ProfileUpdate = ({ onChange, inputs, onSubmit }) => {\r\n\tconst {\r\n\t\tuserIntro,\r\n\t\timageBase64,\r\n\t\tdisplayName,\r\n\t\tsubDisplayName,\r\n\t\twebsite,\r\n\t\tprevDisplayName,\r\n\t} = inputs;\r\n\r\n\t// dispalyName 중복 체크 안내 및 결과 Ref 반환\r\n\tconst checkDisplayName = useCheckDisplayName(prevDisplayName, displayName);\r\n\r\n\t// website validation 체크 후 안내 code, message, color Ref 반환\r\n\tconst checkWebsiteRef = useCheckWebsite(website);\r\n\r\n\t// submit button disable 확인\r\n\tconst checkDisable = () => {\r\n\t\tif (\r\n\t\t\t!(\r\n\t\t\t\tcheckDisplayName.code === 'success' ||\r\n\t\t\t\tcheckDisplayName.code === 'default'\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\t// (dispalyName이 이전과 같거나, 중복 체크에서 성공한 경우)가 아닌 경우 -> disable true (버튼 비활성화)\r\n\t\t\treturn true;\r\n\t\t} else if (checkDisplayName.code === 'empty') {\r\n\t\t\t// dispalyName이 빈 값인 경우 -> -> disable true (버튼 비활성화)\r\n\t\t\treturn true;\r\n\t\t} else if (\r\n\t\t\t// (website가 빈 값이거나, 형식검사에서 성공한 경우)가 아닌 경우 -> disable true (버튼 비활성화)\r\n\t\t\t!(checkWebsiteRef.code === 'empty' || checkWebsiteRef.code === 'success')\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={onSubmit} className=\"update_profile\">\r\n\t\t\t\t<div className=\"update_profile_container\">\r\n\t\t\t\t\t{imageBase64 ? (\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={imageBase64}\r\n\t\t\t\t\t\t\talt=\"preview_image\"\r\n\t\t\t\t\t\t\twidth=\"300px\"\r\n\t\t\t\t\t\t\tclassName=\"preview_image\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"none_image\"></div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tname=\"file\"\r\n\t\t\t\t\t\tid=\"file_input_profile\"\r\n\t\t\t\t\t\taccept=\".jpg, .png\"\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"current_info\">\r\n\t\t\t\t\t\t<div className=\"current_dispaly_name\">{prevDisplayName}</div>\r\n\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\thtmlFor=\"file_input_profile\"\r\n\t\t\t\t\t\t\tclassName=\"change_profile_image\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon className=\"icon_camera\" icon={faCamera} />\r\n\t\t\t\t\t\t\t프로필 사진 변경\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"info_container\">\r\n\t\t\t\t\t<div className=\"display_name_container row\">\r\n\t\t\t\t\t\t<div className=\"label\">사용자 이름</div>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"displayName\"\r\n\t\t\t\t\t\t\tplaceholder=\"사용자 이름\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tvalue={displayName}\r\n\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\tclassName=\"input_display_name\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\thelperText={checkDisplayName.helperTextMessage}\r\n\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\tclassName: checkDisplayName.input,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\tclassName: checkDisplayName.helperText,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"user_intro row\">\r\n\t\t\t\t\t\t<div className=\"label\">소 개</div>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tname=\"userIntro\"\r\n\t\t\t\t\t\t\tvalue={userIntro}\r\n\t\t\t\t\t\t\twrap=\"hard\"\r\n\t\t\t\t\t\t\tmaxLength={120}\r\n\t\t\t\t\t\t\tminRows={3}\r\n\t\t\t\t\t\t\tmaxRows={4}\r\n\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tplaceholder=\"소개를 작성해 주세요. (최대 4줄 및 64자)\"\r\n\t\t\t\t\t\t\tclassName=\"input_user_intro\"\r\n\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"sub_name row\">\r\n\t\t\t\t\t\t<div className=\"label\">이 름</div>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"subDisplayName\"\r\n\t\t\t\t\t\t\tplaceholder=\"이름\"\r\n\t\t\t\t\t\t\tvalue={subDisplayName}\r\n\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\tclassName=\"input_sub_name\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"website row\">\r\n\t\t\t\t\t\t<div className=\"label\">웹 사이트</div>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"website\"\r\n\t\t\t\t\t\t\tplaceholder=\"https:// 또는 http://를 포함시켜 주세요\"\r\n\t\t\t\t\t\t\tvalue={website}\r\n\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\tclassName=\"input_website\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\thelperText={checkWebsiteRef.helperTextMessage}\r\n\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\tclassName: checkWebsiteRef.input,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tFormHelperTextProps={{\r\n\t\t\t\t\t\t\t\tclassName: checkWebsiteRef.helperText,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tclassName=\"update_btn\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tdisableElevation\r\n\t\t\t\t\t\tdisabled={checkDisable()}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t수정\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ProfileUpdate;\r\n","import { useCallback, useMemo } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ProfileUpdate from './ProfileUpdate';\r\nimport resize from '../../hooks/resize';\r\nimport { getImageUrlThunk } from '../../redux/modules/image';\r\nimport { updateProfileThunk } from '../../redux/modules/profile';\r\nimport { checkDisplayNameThunk } from '../../redux/modules/users';\r\nimport { debounce } from 'lodash';\r\n\r\nconst ProfileUpdateContainer = ({ profileInfo }) => {\r\n\tconst history = useHistory();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst { userPhotoUrl, displayName, userIntro, subDisplayName, website } =\r\n\t\tprofileInfo;\r\n\r\n\tconst exist = useSelector((state) => state.users.checkDisplayName.exist);\r\n\r\n\tconst [inputs, setInputs] = useState({\r\n\t\tuserIntro,\r\n\t\tdisplayName,\r\n\t\timageBase64: userPhotoUrl,\r\n\t\tsubDisplayName,\r\n\t\twebsite,\r\n\t\tprevIntro: userIntro,\r\n\t\tprevDisplayName: displayName,\r\n\t\tprevImageUrl: userPhotoUrl,\r\n\t\tprevSubDisplayName: subDisplayName,\r\n\t\tpreventSubmit: false,\r\n\t\tprevWebsite: website,\r\n\t});\r\n\r\n\tconst check = useCallback(\r\n\t\t(displayName) => {\r\n\t\t\tif (inputs.prevDisplayName !== displayName) {\r\n\t\t\t\tdispatch(checkDisplayNameThunk(displayName));\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t},\r\n\t\t[dispatch, inputs]\r\n\t);\r\n\r\n\tconst debounceCheck = useMemo(\r\n\t\t() =>\r\n\t\t\tdebounce((displayName) => {\r\n\t\t\t\tcheck(displayName);\r\n\t\t\t}, 500),\r\n\t\t[check]\r\n\t);\r\n\r\n\tconst onChange = useCallback(\r\n\t\t(event) => {\r\n\t\t\tconst { name, value, files } = event.target;\r\n\t\t\tif (name === 'userIntro') {\r\n\t\t\t\tsetInputs({\r\n\t\t\t\t\t...inputs,\r\n\t\t\t\t\tuserIntro: value,\r\n\t\t\t\t});\r\n\t\t\t} else if (name === 'file') {\r\n\t\t\t\tif (files[0]) {\r\n\t\t\t\t\tconst theFile = files[0];\r\n\t\t\t\t\tconst reader = new FileReader();\r\n\t\t\t\t\treader.onloadend = (finishedEvent) => {\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\tcurrentTarget: { result },\r\n\t\t\t\t\t\t} = finishedEvent;\r\n\t\t\t\t\t\tconst img = new Image();\r\n\t\t\t\t\t\timg.src = result;\r\n\t\t\t\t\t\timg.onload = (event) => {\r\n\t\t\t\t\t\t\tconst dataUrl = resize(img, 300);\r\n\t\t\t\t\t\t\tsetInputs({\r\n\t\t\t\t\t\t\t\t...inputs,\r\n\t\t\t\t\t\t\t\timageBase64: dataUrl,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\treader.readAsDataURL(theFile);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 이미지 선택이 취소되어 없는 경우\r\n\t\t\t\t\tsetInputs({ ...inputs, imageBase64: inputs.prevImageUrl });\r\n\t\t\t\t}\r\n\t\t\t} else if (name === 'displayName') {\r\n\t\t\t\tsetInputs({\r\n\t\t\t\t\t...inputs,\r\n\t\t\t\t\tdisplayName: value,\r\n\t\t\t\t});\r\n\t\t\t\tdebounceCheck(value);\r\n\t\t\t} else if (name === 'subDisplayName') {\r\n\t\t\t\tsetInputs({\r\n\t\t\t\t\t...inputs,\r\n\t\t\t\t\tsubDisplayName: value,\r\n\t\t\t\t});\r\n\t\t\t} else if (name === 'website') {\r\n\t\t\t\tsetInputs({\r\n\t\t\t\t\t...inputs,\r\n\t\t\t\t\twebsite: value,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t[inputs, debounceCheck]\r\n\t);\r\n\r\n\tconst onSubmit = useCallback(\r\n\t\tasync (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tconst {\r\n\t\t\t\timageBase64,\r\n\t\t\t\tuserIntro,\r\n\t\t\t\tdisplayName,\r\n\t\t\t\tsubDispalyName,\r\n\t\t\t\twebsite,\r\n\t\t\t\tprevImageUrl,\r\n\t\t\t\tprevIntro,\r\n\t\t\t\tprevDisplayName,\r\n\t\t\t\tprevSubDisplayName,\r\n\t\t\t\tprevWebsite,\r\n\t\t\t\tpreventSubmit,\r\n\t\t\t} = inputs;\r\n\r\n\t\t\t// 이름 중복 방어 코드\r\n\t\t\tif (prevDisplayName !== displayName) {\r\n\t\t\t\tif (!exist[1] || exist[1] !== displayName) {\r\n\t\t\t\t\twindow.alert('닉네임 중복 확인이 필요 합니다.');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (exist[0]) {\r\n\t\t\t\t\twindow.alert(`${exist[1]}은 이미 존재하는 닉네임 입니다.`);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// 변경 없을 경우 방어 코드\r\n\t\t\tif (\r\n\t\t\t\tpreventSubmit === true ||\r\n\t\t\t\t(imageBase64 === prevImageUrl &&\r\n\t\t\t\t\tdisplayName === prevDisplayName &&\r\n\t\t\t\t\tuserIntro === prevIntro &&\r\n\t\t\t\t\tsubDispalyName === prevSubDisplayName &&\r\n\t\t\t\t\twebsite === prevWebsite)\r\n\t\t\t) {\r\n\t\t\t\thistory.replace(`/user/${prevDisplayName}`);\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tsetInputs({ ...inputs, preventSubmit: true });\r\n\t\t\t\tif (imageBase64) {\r\n\t\t\t\t\tawait dispatch(getImageUrlThunk(imageBase64));\r\n\t\t\t\t}\r\n\t\t\t\tawait dispatch(updateProfileThunk(inputs));\r\n\t\t\t\thistory.replace(`/user/${displayName}`);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[dispatch, history, inputs, exist]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ProfileUpdate onChange={onChange} inputs={inputs} onSubmit={onSubmit} />\r\n\t);\r\n};\r\n\r\nexport default ProfileUpdateContainer;\r\n","import { useLocation } from 'react-router-dom';\r\nimport Navigation from '../../components/common/Navigation';\r\nimport PostUpdateContainer from '../../components/PostUpdate/PostUpdateContainer';\r\nimport ProfileUpdateContainer from '../../components/ProfileUpdate/ProfileUpdateContainer';\r\n\r\nconst Update = () => {\r\n\tconst {\r\n\t\tpathname,\r\n\t\tstate: { profileInfo, post },\r\n\t} = useLocation();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navigation />\r\n\t\t\t<div className=\"page\">\r\n\t\t\t\t<div className=\"inner\">\r\n\t\t\t\t\t{pathname === '/update/profile' ? (\r\n\t\t\t\t\t\t<ProfileUpdateContainer profileInfo={profileInfo} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<PostUpdateContainer post={post} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"modal_root\"></div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Update;\r\n","import { useCallback, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PostForm from './PostForm';\r\nimport resize from '../../hooks/resize';\r\nimport { getImageUrlThunk } from '../../redux/modules/image';\r\nimport {\r\n\tcreatePostThunk,\r\n\tgetAllPostsThunk,\r\n\tgetUserPostsThunk,\r\n} from '../../redux/modules/post';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst PostFormContainer = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst currentUserInfo = useSelector((state) => state.users.currentUserInfo);\r\n\tconst [inputs, setInputs] = useState({\r\n\t\timageBase64: '',\r\n\t\ttext: '',\r\n\t\tpreventSubmit: false,\r\n\t});\r\n\tconst [postFormError, setPostFormError] = useState('');\r\n\tconst errorToggle = useCallback(() => {\r\n\t\tsetPostFormError(!postFormError);\r\n\t}, [postFormError]);\r\n\r\n\tconst onChange = useCallback(\r\n\t\t(event) => {\r\n\t\t\tconst { name, value, files } = event.target;\r\n\t\t\tif (name === 'file') {\r\n\t\t\t\tif (files[0]) {\r\n\t\t\t\t\tconst theFile = files[0];\r\n\t\t\t\t\tconst reader = new FileReader();\r\n\t\t\t\t\treader.onloadend = (finishedEvent) => {\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\tcurrentTarget: { result },\r\n\t\t\t\t\t\t} = finishedEvent;\r\n\r\n\t\t\t\t\t\tconst img = new Image();\r\n\t\t\t\t\t\timg.src = result;\r\n\t\t\t\t\t\timg.onload = (event) => {\r\n\t\t\t\t\t\t\tconst dataUrl = resize(img, 600);\r\n\t\t\t\t\t\t\tsetInputs({ ...inputs, imageBase64: dataUrl });\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\treader.readAsDataURL(theFile);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 이미지 선택이 취소 되어 없는 경우\r\n\t\t\t\t\tsetInputs({ ...inputs, imageBase64: '' });\r\n\t\t\t\t}\r\n\t\t\t} else if (name === 'text') {\r\n\t\t\t\tsetInputs({ ...inputs, text: value });\r\n\t\t\t}\r\n\t\t},\r\n\t\t[inputs]\r\n\t);\r\n\r\n\tconst onSubmit = useCallback(\r\n\t\tasync (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tconst { text, imageBase64 } = inputs;\r\n\t\t\tif (!text) {\r\n\t\t\t\tsetPostFormError('내용을 입력해 주세요.');\r\n\t\t\t\treturn;\r\n\t\t\t} else if (!imageBase64) {\r\n\t\t\t\tsetPostFormError('사진을 올려 주세요.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (inputs.preventSubmit === false && imageBase64) {\r\n\t\t\t\tsetInputs({ ...inputs, preventSubmit: true });\r\n\t\t\t\tawait dispatch(getImageUrlThunk(imageBase64));\r\n\t\t\t\tawait dispatch(createPostThunk(text));\r\n\t\t\t\tawait dispatch(getAllPostsThunk());\r\n\t\t\t\tawait dispatch(getUserPostsThunk(currentUserInfo.displayName));\r\n\t\t\t\thistory.replace('/');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[dispatch, inputs, history, currentUserInfo]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<PostForm\r\n\t\t\tonChange={onChange}\r\n\t\t\tinputs={inputs}\r\n\t\t\tonSubmit={onSubmit}\r\n\t\t\tcurrentUserInfo={currentUserInfo}\r\n\t\t\tpostFormError={postFormError}\r\n\t\t\terrorToggle={errorToggle}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default PostFormContainer;\r\n","import Navigation from '../../components/common/Navigation';\r\nimport PostFormContainer from '../../components/PostForm/PostFormContainer';\r\n\r\nconst Write = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navigation />\r\n\t\t\t<div className=\"page\">\r\n\t\t\t\t<div className=\"inner\">\r\n\t\t\t\t\t<PostFormContainer />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"modal_root\"></div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Write;\r\n","import { useEffect } from 'react';\r\nimport { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Route, BrowserRouter, Switch, Redirect } from 'react-router-dom';\r\nimport Auth from '../pages/Auth/Auth';\r\nimport Comments from '../pages/Comments/Comments';\r\nimport Home from '../pages/Home/Home';\r\nimport Posts from '../pages/Posts/Posts';\r\nimport Profile from '../pages/Profile/Profile';\r\nimport Update from '../pages/Update/Update';\r\nimport Write from '../pages/Write/Write';\r\nimport { getAllPostsThunk } from '../redux/modules/post';\r\nimport {\r\n\tgetCurrentUserInfoThunk,\r\n\tgetRandomUserInfoThunk,\r\n} from '../redux/modules/users';\r\n\r\nconst AppRouter = () => {\r\n\tconst isLoggedIn = useSelector((state) => state.profile.currentUser.isSignIn);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst getInitInfo = useCallback(async () => {\r\n\t\tif (isLoggedIn) {\r\n\t\t\tawait Promise.all([\r\n\t\t\t\tdispatch(getAllPostsThunk()),\r\n\t\t\t\tdispatch(getCurrentUserInfoThunk()),\r\n\t\t\t]);\r\n\t\t\tdispatch(getRandomUserInfoThunk());\r\n\t\t}\r\n\t}, [dispatch, isLoggedIn]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetInitInfo();\r\n\t}, [getInitInfo]);\r\n\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Switch>\r\n\t\t\t\t{isLoggedIn ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Route path=\"/\" exact component={Home} />\r\n\t\t\t\t\t\t<Route path=\"/write\" exact component={Write} />\r\n\t\t\t\t\t\t<Route path=\"/update/profile\" exact component={Update} />\r\n\t\t\t\t\t\t<Route path=\"/update/post\" exact component={Update} />\r\n\t\t\t\t\t\t<Route path=\"/user/:userName\" exact component={Profile} />\r\n\t\t\t\t\t\t<Route path=\"/user/:userName/posts\" exact component={Posts} />\r\n\t\t\t\t\t\t<Route path=\"/:postId/comments\" exact component={Comments} />\r\n\t\t\t\t\t\t<Redirect from=\"*\" to=\"/\" />\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Route path=\"/\" exact component={Auth} />\r\n\t\t\t\t\t\t<Redirect from=\"*\" to=\"/\" />\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faInstagram } from '@fortawesome/free-brands-svg-icons';\r\nimport './Load.scss';\r\n\r\n// 앱 초기화시 로딩 페이지\r\nconst Load = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"load\">\r\n\t\t\t\t<h2 className=\"title\">Racstagram</h2>\r\n\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\tclassName={'fa-spin'}\r\n\t\t\t\t\t\ticon={faInstagram}\r\n\t\t\t\t\t\tsize={'10x'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Load;\r\n","import AppRouter from '../Router';\r\nimport Load from '../common/Load';\r\nimport { useEffect } from 'react';\r\n\r\nconst Init = ({ isInit, isSignInOut }) => {\r\n\tuseEffect(() => {\r\n\t\tisSignInOut();\r\n\t}, [isSignInOut]);\r\n\treturn <>{isInit ? <AppRouter /> : <Load />}</>;\r\n};\r\n\r\nexport default Init;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// Initial State\r\n\r\nconst initialState = {\r\n\tisInit: false,\r\n};\r\n\r\n// Slice\r\nconst init = createSlice({\r\n\tname: 'redux-racstagram/init',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetIsinitTrue: (state) => ({\r\n\t\t\t...state,\r\n\t\t\tisInit: true,\r\n\t\t}),\r\n\t},\r\n\textraReducers: {},\r\n});\r\n\r\nexport default init.reducer;\r\n\r\n// actionCreator\r\nexport const { setIsinitTrue } = init.actions;\r\n","import { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Init from './Init';\r\nimport { authService } from '../../fBase';\r\nimport { setIsinitTrue } from '../../redux/modules/init';\r\nimport { setCurrentUser } from '../../redux/modules/profile';\r\n\r\nconst InitContainer = () => {\r\n\t// redux state\r\n\tconst isInit = useSelector((state) => state.init.isInit);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst isSignInOut = useCallback(() => {\r\n\t\tauthService.onAuthStateChanged(async (user) => {\r\n\t\t\tif (user) {\r\n\t\t\t\tdispatch(setCurrentUser(user));\r\n\t\t\t} else {\r\n\t\t\t\tdispatch(setCurrentUser(''));\r\n\t\t\t}\r\n\t\t\tdispatch(setIsinitTrue());\r\n\t\t});\r\n\t}, [dispatch]);\r\n\r\n\treturn <Init isInit={isInit} isSignInOut={isSignInOut} />;\r\n};\r\n\r\nexport default InitContainer;\r\n","import InitContainer from './components/Init/InitContainer';\r\nimport './styles/main.scss';\r\nfunction App() {\r\n\treturn <InitContainer />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\n\r\nimport init from './init';\r\nimport auth from './auth';\r\nimport post from './post';\r\nimport profile from './profile';\r\nimport users from './users';\r\nimport image from './image';\r\nimport comment from './comment';\r\nimport like from './like';\r\nconst reducer = combineReducers({\r\n\tinit,\r\n\tauth,\r\n\tpost,\r\n\tprofile,\r\n\tusers,\r\n\timage,\r\n\tcomment,\r\n\tlike,\r\n});\r\n\r\n/* \r\nstate = {\r\n  init :{\r\n    isInit: false,\r\n  },\r\n  auth :{\r\n    newAccount: false,\r\n\t  errorSelector: '',\r\n    emailSignUp: {\r\n      isSignUp: false,\r\n      loading: false,\r\n      signUpError: '',\r\n    },\r\n    emailSignIn: {\r\n      isSignIn: false,\r\n      loading: false,\r\n      signInError: '',\r\n    },\r\n    socialSignIn: {\r\n      isSignIn: false,\r\n      loading: false,\r\n      signInError: '',\r\n    },\r\n  },\r\n  post :{\r\n    postList: [],\r\n    postSelector: '',\r\n    updatePost: {\r\n      isUpdate: false,\r\n      loading: false,\r\n      updateError: '',\r\n    },\r\n    deletePost: {\r\n      isDelete: false,\r\n      loading: false,\r\n      deleteError: '',\r\n    },\r\n    getPostList: {\r\n      isGet: false,\r\n      loading: false,\r\n      getError: '',\r\n    },\r\n    setPostObj: {\r\n      isSet: false,\r\n      loading: false,\r\n      setError: '',\r\n    },\r\n  },\r\n  profile :{\r\n    updateProfile: {\r\n\t\t  loading: false,\r\n\t\t  isUpdate: false,\r\n\t\t  updateError: '',\r\n\t  },\r\n    currentUser: {\r\n      isSignIn: false,\r\n      photoURL: '',\r\n      displayName: '',\r\n      uid: '',\r\n    },\r\n    updateDisplayName: {\r\n      isUpdate: false,\r\n      loading: false,\r\n      updateError: '',\r\n    },\r\n    updatePhotoUrl: {\r\n      isUpdate: false,\r\n      loading: false,\r\n      updateError: '',\r\n    },\r\n  },\r\n  common :{\r\n    updateSelector: '',\r\n    getImageUrl: {\r\n      isGet: false,\r\n      loading: false,\r\n      getError: '',\r\n      imageUrl: '',\r\n    },\r\n    deleteImageUrl: {\r\n      loading: false,\r\n      isDelete: false,\r\n      deleteError: '',\r\n    },\r\n  },\r\n  users :{\r\n    \r\n  }\r\n}\r\n */\r\n\r\nexport default reducer;\r\n","import reducer from './modules/reducer';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\nconst store = configureStore({ reducer });\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}